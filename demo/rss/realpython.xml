<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Real Python</title>
  <link href="https://realpython.com/atom.xml" rel="self"/>
  <link href="https://realpython.com/"/>
  <updated>2025-06-20T12:00:00+00:00</updated>
  <id>https://realpython.com/</id>
  <author>
    <name>Real Python</name>
  </author>

  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #254: Scaling Python Web Applications With Kubernetes and Karpenter</title>
      <id>https://realpython.com/podcasts/rpp/254/</id>
      <link href="https://realpython.com/podcasts/rpp/254/"/>
      <updated>2025-06-20T12:00:00+00:00</updated>
      <summary>What goes into scaling a web application today? What are resources for learning and practicing DevOps skills? This week on the show, Calvin Hendryx-Parker is back to discuss the tools and infrastructure for autoscaling web applications with Kubernetes and Karpenter.</summary>
      <content type="html">
        &lt;p&gt;What goes into scaling a web application today? What are resources for learning and practicing DevOps skills? This week on the show, Calvin Hendryx-Parker is back to discuss the tools and infrastructure for autoscaling web applications with Kubernetes and Karpenter.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Python Project: Build a Word Count Command-Line App</title>
      <id>https://realpython.com/courses/word-count-app-project/</id>
      <link href="https://realpython.com/courses/word-count-app-project/"/>
      <updated>2025-06-18T14:00:00+00:00</updated>
      <summary>A self-paced coding challenge in which you&#x27;ll practice your Python skills by building a clone of the popular word count utility (wc) on Unix.</summary>
      <content type="html">
        &lt;p&gt;The &lt;strong&gt;word count&lt;/strong&gt; command (&lt;a href=&quot;https://en.wikipedia.org/wiki/Wc_(Unix)&quot;&gt;&lt;code&gt;wc&lt;/code&gt;&lt;/a&gt;) is a classic utility that you might use to determine the number of lines, words, and bytes in files or &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_streams#Standard_input_(stdin)&quot;&gt;standard input&lt;/a&gt;. It&amp;rsquo;s a staple tool for anyone working with text files on &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix-like&quot;&gt;Unix-like&lt;/a&gt; systems. But have you ever wondered how such a tool is designed and implemented?&lt;/p&gt;
&lt;p&gt;In this practice exercise, you&amp;rsquo;ll dive into the inner workings of the Unix &lt;code&gt;wc&lt;/code&gt; command by building its simplified version from scratch using Python. Not only will this coding challenge solidify your understanding of &lt;a href=&quot;https://realpython.com/working-with-files-in-python/&quot;&gt;file handling&lt;/a&gt; and &lt;a href=&quot;https://realpython.com/python-string-split-concatenate-join/&quot;&gt;text processing&lt;/a&gt;, but it&amp;rsquo;ll also give you a taste of how to structure &lt;a href=&quot;https://realpython.com/python-command-line-arguments/&quot;&gt;command-line utilities&lt;/a&gt; in Python.&lt;/p&gt;
&lt;p&gt;By the end of this challenge, you&amp;rsquo;ll have a functional version of the &lt;code&gt;wc&lt;/code&gt; command that can faithfully reproduce the outputs you&amp;rsquo;re accustomed to seeing in a Unix &lt;a href=&quot;https://realpython.com/terminal-commands/&quot;&gt;terminal&lt;/a&gt;. However, it won&amp;rsquo;t be an exact replica of the &lt;code&gt;wc&lt;/code&gt; command, as you&amp;rsquo;ll omit or adapt some features for simplicity.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this coding challenge, you&amp;rsquo;ll:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read content from &lt;strong&gt;files&lt;/strong&gt; and &lt;strong&gt;standard input (stdin)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Count the number of &lt;strong&gt;lines&lt;/strong&gt;, &lt;strong&gt;words&lt;/strong&gt;, and &lt;strong&gt;bytes&lt;/strong&gt; in the input&lt;/li&gt;
&lt;li&gt;Differentiate between bytes and &lt;strong&gt;characters&lt;/strong&gt; to handle &lt;strong&gt;Unicode&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Implement &lt;strong&gt;command-line arguments&lt;/strong&gt; to specify what counts to display&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While working on this challenge, you&amp;rsquo;ll gain hands-on experience with several modules from Python&amp;rsquo;s standard library, such as &lt;a href=&quot;https://realpython.com/python-pathlib/&quot;&gt;&lt;code&gt;pathlib&lt;/code&gt;&lt;/a&gt; for manipulating the file system and &lt;a href=&quot;https://realpython.com/command-line-interfaces-python-argparse/&quot;&gt;&lt;code&gt;argparse&lt;/code&gt;&lt;/a&gt; for parsing command-line arguments. Familiarity with basic Python programming and file handling will be beneficial, but detailed instructions and helpful tips will guide you through each step of the process.&lt;/p&gt;
&lt;p&gt;The challenge is broken down into a number of &lt;strong&gt;tasks&lt;/strong&gt;, each accompanied by clear instructions and illustrative examples. You&amp;rsquo;ll receive &lt;strong&gt;automated feedback&lt;/strong&gt; on your solutions when you follow along using the accompanying materials. If you run into any issues or have questions, then don&amp;rsquo;t hesitate to ask for help in the &lt;strong&gt;comments section&lt;/strong&gt; below the corresponding lesson.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You can also reach out to the Real Python community on &lt;a href=&quot;https://realpython.com/community/&quot;&gt;Slack&lt;/a&gt; or join live conversations during &lt;a href=&quot;https://realpython.com/office-hours/&quot;&gt;Office Hours&lt;/a&gt;, where you&amp;rsquo;ll have an opportunity to share your screen remotely.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Completing each task unlocks the next one. Once you&amp;rsquo;ve completed a task, you can compare your code with the &lt;strong&gt;sample solution&lt;/strong&gt; provided in the following lesson. Remember that there&amp;rsquo;s often more than one way to solve a problem. If your solution differs slightly but meets the acceptance criteria and adheres to good programming practices, then that&amp;rsquo;s perfectly fine.&lt;/p&gt;
&lt;p&gt;Good luck!&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Exploring Python&#x27;s list Data Type With Examples</title>
      <id>https://realpython.com/courses/list-data-type-with-examples/</id>
      <link href="https://realpython.com/courses/list-data-type-with-examples/"/>
      <updated>2025-06-17T14:00:00+00:00</updated>
      <summary>In this video course, you&#x27;ll dive deep into Python&#x27;s lists: how to create them, update their content, populate and grow them - with practical code examples.</summary>
      <content type="html">
        &lt;p&gt;The &lt;strong&gt;&lt;code&gt;list&lt;/code&gt;&lt;/strong&gt; class is a fundamental &lt;strong&gt;built-in data type&lt;/strong&gt; in Python. It has an impressive and useful set of features, allowing you to efficiently organize and manipulate heterogeneous data. Knowing how to use lists is a must-have skill for you as a Python developer. Lists have many use cases, so you&amp;rsquo;ll frequently reach for them in real-world coding.&lt;/p&gt;
&lt;p&gt;By working through this video course, you&amp;rsquo;ll dive deep into lists and get a solid understanding of their key features. This knowledge will allow you to write more effective code by taking advantage of lists.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this video course, you&amp;rsquo;ll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; new lists in Python&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Access&lt;/strong&gt; the items in an existing list&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Copy&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt;, &lt;strong&gt;grow&lt;/strong&gt;, &lt;strong&gt;shrink&lt;/strong&gt;, and &lt;strong&gt;concatenate&lt;/strong&gt; existing lists&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sort&lt;/strong&gt;, &lt;strong&gt;reverse&lt;/strong&gt;, and &lt;strong&gt;traverse&lt;/strong&gt; existing lists&lt;/li&gt;
&lt;li&gt;Use other &lt;strong&gt;features&lt;/strong&gt; of Python lists&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Write Pythonic and Clean Code With namedtuple</title>
      <id>https://realpython.com/python-namedtuple/</id>
      <link href="https://realpython.com/python-namedtuple/"/>
      <updated>2025-06-16T14:00:00+00:00</updated>
      <summary>Discover how Python&#x27;s namedtuple lets you create simple, readable data structures with named fields you can access using dot notation.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Python‚Äôs &lt;code&gt;namedtuple&lt;/code&gt; in the &lt;code&gt;collections&lt;/code&gt; module allows you to create immutable sequences with named fields, providing a more readable and Pythonic way to handle tuples. You use &lt;code&gt;namedtuple&lt;/code&gt; to access values with descriptive field names and dot notation, which improves code clarity and maintainability.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python‚Äôs &lt;strong&gt;&lt;code&gt;namedtuple&lt;/code&gt;&lt;/strong&gt; is a &lt;strong&gt;factory function&lt;/strong&gt; that creates tuple subclasses with named fields.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;main difference&lt;/strong&gt; between &lt;code&gt;tuple&lt;/code&gt; and &lt;code&gt;namedtuple&lt;/code&gt; is that &lt;code&gt;namedtuple&lt;/code&gt; allows attribute access via &lt;strong&gt;named fields&lt;/strong&gt;, enhancing readability.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;point of using &lt;code&gt;namedtuple&lt;/code&gt;&lt;/strong&gt; is to improve code clarity by allowing access to elements through descriptive names instead of integer indices.&lt;/li&gt;
&lt;li&gt;Some &lt;strong&gt;alternatives&lt;/strong&gt; to &lt;code&gt;namedtuple&lt;/code&gt; include dictionaries, data classes, and &lt;code&gt;typing.NamedTuple&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Dive deeper into creating &lt;code&gt;namedtuple&lt;/code&gt; classes, exploring their powerful features, and writing Python code that‚Äôs easier to read and maintain.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-namedtuple-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-namedtuple-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code&lt;/a&gt; that shows you how to use namedtuple to write Pythonic and clean code.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúWrite Pythonic and Clean Code With namedtuple‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/python-namedtuple/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #b9abe6;&quot; alt=&quot;Write Pythonic and Clean Code With namedtuple&quot; src=&quot;https://files.realpython.com/media/Clean-Up-Your-Python-Code-With-namedtuple_Watermarked.0ab0ddbda383.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Clean-Up-Your-Python-Code-With-namedtuple_Watermarked.0ab0ddbda383.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Clean-Up-Your-Python-Code-With-namedtuple_Watermarked.0ab0ddbda383.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Clean-Up-Your-Python-Code-With-namedtuple_Watermarked.0ab0ddbda383.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Clean-Up-Your-Python-Code-With-namedtuple_Watermarked.0ab0ddbda383.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/python-namedtuple/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;Write Pythonic and Clean Code With namedtuple&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;In this quiz, you&#x27;ll test your understanding of Python&#x27;s namedtuple() factory function from the collections module.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;getting-to-know-namedtuple-in-python&quot;&gt;Getting to Know &lt;code&gt;namedtuple&lt;/code&gt; in Python&lt;a class=&quot;headerlink&quot; href=&quot;#getting-to-know-namedtuple-in-python&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Python‚Äôs &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Factory_(object-oriented_programming)&quot;&gt;factory function&lt;/a&gt; that‚Äôs available in the &lt;a href=&quot;https://docs.python.org/3/library/collections.html#module-collections&quot;&gt;&lt;code&gt;collections&lt;/code&gt;&lt;/a&gt; module. It allows you to create a &lt;a href=&quot;https://realpython.com/python-tuple/&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; &lt;a href=&quot;/ref/glossary/subclass/&quot; class=&quot;ref-link&quot;&gt;subclass&lt;/a&gt; with &lt;strong&gt;named fields&lt;/strong&gt;. These named fields let you to access the values in a given named tuple using &lt;a href=&quot;/ref/glossary/dot-notation/&quot; class=&quot;ref-link&quot;&gt;&lt;strong&gt;dot notation&lt;/strong&gt;&lt;/a&gt; and field names‚Äîfor example, &lt;code&gt;my_tuple.field_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Python‚Äôs &lt;code&gt;namedtuple&lt;/code&gt; was created to improve code readability by providing a way to access values using descriptive field names instead of integer indices, which often don‚Äôt provide any context on what the values are. This feature also makes the code cleaner and more maintainable.&lt;/p&gt;
&lt;p&gt;In contrast, accessing values by index in a regular tuple can be frustrating, hard to read, and error-prone. This is especially true if the tuple has a lot of fields and is constructed far away from where you‚Äôre using it.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In this tutorial, you‚Äôll find different terms used to refer to Python‚Äôs &lt;code&gt;namedtuple&lt;/code&gt;, its factory function, and its instances.&lt;/p&gt;
&lt;p&gt;To avoid confusion, here‚Äôs a summary of how each term is used throughout the tutorial:&lt;/p&gt;
&lt;div class=&quot;table-responsive&quot;&gt;
&lt;table class=&quot;table table-hover&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Term&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;namedtuple()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;The factory function&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;namedtuple&lt;/code&gt;, &lt;code&gt;namedtuple&lt;/code&gt; class&lt;/td&gt;
&lt;td&gt;The tuple subclass returned by &lt;code&gt;namedtuple()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;namedtuple&lt;/code&gt; instance, named tuple&lt;/td&gt;
&lt;td&gt;An instance of a specific &lt;code&gt;namedtuple&lt;/code&gt; class&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;You‚Äôll find these terms used with their corresponding meaning throughout the tutorial.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Besides providing named fields, named tuples in Python offer the following features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Are &lt;a href=&quot;https://realpython.com/python-mutable-vs-immutable-types/&quot;&gt;immutable&lt;/a&gt; data structures&lt;/li&gt;
&lt;li&gt;Can have a &lt;a href=&quot;https://docs.python.org/3/library/functions.html#hash&quot;&gt;hash&lt;/a&gt; value and work as &lt;strong&gt;dictionary keys&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Can be stored in &lt;a href=&quot;https://realpython.com/python-sets/&quot;&gt;sets&lt;/a&gt; when they have a hash value&lt;/li&gt;
&lt;li&gt;Generate a basic &lt;a href=&quot;https://realpython.com/documenting-python-code/&quot;&gt;docstring&lt;/a&gt; using the type and field names&lt;/li&gt;
&lt;li&gt;Provide a helpful &lt;a href=&quot;/ref/glossary/string-representation/&quot; class=&quot;ref-link&quot;&gt;&lt;strong&gt;string representation&lt;/strong&gt;&lt;/a&gt; that displays the tuple content in a &lt;code&gt;name=value&lt;/code&gt; format&lt;/li&gt;
&lt;li&gt;Support &lt;a href=&quot;/ref/glossary/indexing/&quot; class=&quot;ref-link&quot;&gt;&lt;strong&gt;indexing&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;/ref/glossary/slicing/&quot; class=&quot;ref-link&quot;&gt;&lt;strong&gt;slicing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Provide additional &lt;a href=&quot;/ref/glossary/method/&quot; class=&quot;ref-link&quot;&gt;methods&lt;/a&gt; and &lt;a href=&quot;/ref/glossary/attribute/&quot; class=&quot;ref-link&quot;&gt;attributes&lt;/a&gt;, such as &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.somenamedtuple._make&quot;&gt;&lt;code&gt;._make()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.somenamedtuple._asdict&quot;&gt;&lt;code&gt;_asdict()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://docs.python.org/3/library/collections.html#collections.somenamedtuple._fields&quot;&gt;&lt;code&gt;._fields&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Are &lt;strong&gt;backward compatible&lt;/strong&gt; with regular tuples&lt;/li&gt;
&lt;li&gt;Have &lt;strong&gt;similar memory usage&lt;/strong&gt; to regular tuples&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can use &lt;code&gt;namedtuple&lt;/code&gt; instances wherever you need a tuple-like object. They offer the added benefit of accessing values using field names and dot notation, which makes your code more readable and Pythonic.&lt;/p&gt;
&lt;p&gt;With this brief introduction to &lt;code&gt;namedtuple&lt;/code&gt; and its general features, you‚Äôre ready to explore how to create and use them effectively in your own code.&lt;/p&gt;
&lt;h2 id=&quot;creating-tuple-like-classes-with-the-namedtuple-function&quot;&gt;Creating Tuple-Like Classes With the &lt;code&gt;namedtuple()&lt;/code&gt; Function&lt;a class=&quot;headerlink&quot; href=&quot;#creating-tuple-like-classes-with-the-namedtuple-function&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You use a &lt;code&gt;namedtuple()&lt;/code&gt; to create an &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-immutable&quot;&gt;immutable&lt;/a&gt;, tuple-like &lt;a href=&quot;/ref/glossary/sequence/&quot; class=&quot;ref-link&quot;&gt;sequence&lt;/a&gt; with named fields. A popular example that you‚Äôll often find in resources about &lt;code&gt;namedtuple&lt;/code&gt; is defining a class to represent a mathematical &lt;a href=&quot;https://en.wikipedia.org/wiki/Point_(geometry)&quot;&gt;point&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Depending on the problem, you‚Äôll probably want to use an immutable data structure to represent your points. Here‚Äôs how you can create a two-dimensional point using a regular tuple:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Create a 2D point as a regular tuple&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;(2, 4)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Access coordinate x&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Access coordinate y&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Try to update a coordinate value&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;gr&quot;&gt;TypeError&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;&#x27;tuple&#x27; object does not support item assignment&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this example, you create an immutable, two-dimensional &lt;code&gt;point&lt;/code&gt; using a regular tuple. This code works. You have a &lt;code&gt;point&lt;/code&gt; with two coordinates that you can access by index. The point is immutable, so you can‚Äôt modify the coordinates. However, do you think this code is readable? Can you tell upfront what the &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; indices mean?&lt;/p&gt;
&lt;p&gt;To improve clarity, you can use a &lt;code&gt;namedtuple&lt;/code&gt; like in the following code. Note that you need to import the function from the &lt;code&gt;collections&lt;/code&gt; module first:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namedtuple&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Create a namedtuple type, Point&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namedtuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Point&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;x y&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Point(x=2, y=4)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Access the coordinates by field name&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Access the coordinates by index&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;gr&quot;&gt;AttributeError&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;can&#x27;t set attribute&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;issubclass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now you have a &lt;code&gt;Point&lt;/code&gt; class with two appropriately named fields, &lt;code&gt;.x&lt;/code&gt; and &lt;code&gt;.y&lt;/code&gt;. Your &lt;code&gt;point&lt;/code&gt; provides a descriptive string representation by default: &lt;code&gt;Point(x=2, y=4)&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can access the coordinates with dot notation and the field names, which is convenient, readable, and explicit. You can also use indices to access each coordinate‚Äôs value if you prefer.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As with regular tuples, named tuples are &lt;a href=&quot;https://realpython.com/python-mutable-vs-immutable-types/&quot;&gt;immutable&lt;/a&gt;. However, the values they store don‚Äôt necessarily have to be immutable.&lt;/p&gt;
&lt;p&gt;It‚Äôs completely valid to create a tuple or a named tuple that holds mutable values:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namedtuple&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;namedtuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Person&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name children&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;john&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;John Doe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Timmy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jimmy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;john&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Person(name=&#x27;John Doe&#x27;, children=[&#x27;Timmy&#x27;, &#x27;Jimmy&#x27;])&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;john&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;139695902374144&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;john&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tina&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;john&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Person(name=&#x27;John Doe&#x27;, children=[&#x27;Timmy&#x27;, &#x27;Jimmy&#x27;, &#x27;Tina&#x27;])&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;john&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;139695902374144&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;john&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;Traceback (most recent call last):&lt;/span&gt;
&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;gr&quot;&gt;TypeError&lt;/span&gt;: &lt;span class=&quot;n&quot;&gt;unhashable type: &#x27;list&#x27;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You can create named tuples that contain mutable objects. Then, you can modify the mutable objects in the underlying tuple. However, this doesn‚Äôt mean that you‚Äôre modifying the tuple itself. The tuple will continue being the same object.&lt;/p&gt;
&lt;p&gt;Finally, tuples or named tuples with mutable values aren‚Äôt &lt;a href=&quot;/ref/glossary/hashable/&quot; class=&quot;ref-link&quot;&gt;hashable&lt;/a&gt;, as you saw in the above example.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-namedtuple/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-namedtuple/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #253: Starting With Marimo Notebooks &amp; Python App Config Management</title>
      <id>https://realpython.com/podcasts/rpp/253/</id>
      <link href="https://realpython.com/podcasts/rpp/253/"/>
      <updated>2025-06-13T12:00:00+00:00</updated>
      <summary>Looking for a guide on getting started with Marimo notebooks? How do you build a reproducible notebook for sharing or create a dashboard with interactive UI elements? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;Looking for a guide on getting started with Marimo notebooks? How do you build a reproducible notebook for sharing or create a dashboard with interactive UI elements? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Defining Your Own Python Function</title>
      <id>https://realpython.com/defining-your-own-python-function/</id>
      <link href="https://realpython.com/defining-your-own-python-function/"/>
      <updated>2025-06-11T14:00:00+00:00</updated>
      <summary>Learn how to define your own Python function, pass data into it, and return results to write clean, reusable code in your programs.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;A Python function is a named block of code that performs specific tasks and can be reused in other parts of your code. Python has several built-in functions that are always available, and you can also create your own. These are known as user-defined functions.&lt;/p&gt;
&lt;p&gt;To define a function in Python, you use the &lt;code&gt;def&lt;/code&gt; keyword, followed by the function name and an optional list of parameters enclosed in a required pair of parentheses. You can call and reuse a function by using its name, a pair of parentheses, and the necessary arguments.&lt;/p&gt;
&lt;p&gt;Learning to define and call functions is a fundamental skill for any Python developer. Functions help organize your code and make it more modular, reusable, and easier to maintain.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;strong&gt;Python function&lt;/strong&gt; is a &lt;strong&gt;self-contained block&lt;/strong&gt; of code designed to perform a &lt;strong&gt;specific task&lt;/strong&gt;, which you can call and &lt;strong&gt;reuse&lt;/strong&gt; in different parts of your code.&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;define&lt;/strong&gt; a Python function with the &lt;strong&gt;&lt;code&gt;def&lt;/code&gt; keyword&lt;/strong&gt;, followed by the &lt;strong&gt;function name&lt;/strong&gt;, &lt;strong&gt;parentheses&lt;/strong&gt; with &lt;strong&gt;optional parameters&lt;/strong&gt;, a colon, and then an &lt;strong&gt;indented code block&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You &lt;strong&gt;call&lt;/strong&gt; a Python function by writing its &lt;strong&gt;name&lt;/strong&gt; followed by &lt;strong&gt;parentheses&lt;/strong&gt;, enclosing any necessary &lt;strong&gt;arguments&lt;/strong&gt;, to execute its code block.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Understanding functions is key to writing organized and efficient Python code. By learning to define and use your own functions, you‚Äôll be able to manage complexity and make your code easier to read.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/defining-your-own-python-function-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-defining-your-own-python-function-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code &lt;/a&gt; that shows you how to define your own function in Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúDefining Your Own Python Function‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/python-function/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #ffc973;&quot; alt=&quot;Defining Your Own Python Function&quot; src=&quot;https://files.realpython.com/media/UPDATE-Defining-Your-Own-Python-Function_Watermarked.54412dcabb8d.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/UPDATE-Defining-Your-Own-Python-Function_Watermarked.54412dcabb8d.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/UPDATE-Defining-Your-Own-Python-Function_Watermarked.54412dcabb8d.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/UPDATE-Defining-Your-Own-Python-Function_Watermarked.54412dcabb8d.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/UPDATE-Defining-Your-Own-Python-Function_Watermarked.54412dcabb8d.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/python-function/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;Defining Your Own Python Function&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;In this quiz, you&#x27;ll test your understanding of defining and calling Python functions. You&#x27;ll revisit the def keyword, parameters, arguments, and more.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;getting-to-know-functions-in-python&quot;&gt;Getting to Know Functions in Python&lt;a class=&quot;headerlink&quot; href=&quot;#getting-to-know-functions-in-python&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In mathematics, a &lt;strong&gt;function&lt;/strong&gt; is a relationship or mapping between one or more inputs and a set of outputs. This concept is typically represented by the following equation:&lt;/p&gt;
&lt;figure class=&quot;js-lightbox&quot;&gt;&lt;a href=&quot;https://files.realpython.com/media/math-function.8bb35bb0fd7e.png&quot; target=&quot;_blank&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block &quot; src=&quot;https://files.realpython.com/media/math-function.8bb35bb0fd7e.png&quot; width=&quot;384&quot; height=&quot;83&quot; srcset=&quot;/cdn-cgi/image/width=96,format=auto/https://files.realpython.com/media/math-function.8bb35bb0fd7e.png 96w, /cdn-cgi/image/width=128,format=auto/https://files.realpython.com/media/math-function.8bb35bb0fd7e.png 128w, /cdn-cgi/image/width=192,format=auto/https://files.realpython.com/media/math-function.8bb35bb0fd7e.png 192w, /cdn-cgi/image/width=384,format=auto/https://files.realpython.com/media/math-function.8bb35bb0fd7e.png 384w&quot; sizes=&quot;(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)&quot; alt=&quot;Math Function&quot; data-asset=&quot;6368&quot;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Here, &lt;em&gt;f()&lt;/em&gt; is a function that operates on the variables &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, and it generates a result that‚Äôs assigned to &lt;em&gt;z&lt;/em&gt;. You can read this formula as &lt;em&gt;z&lt;/em&gt; is a function of &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;. But how does this work in practice? As an example, say that you have a concrete function that looks something like the following:&lt;/p&gt;
&lt;figure class=&quot;js-lightbox&quot;&gt;&lt;a href=&quot;https://files.realpython.com/media/add-function.38115f478105.png&quot; target=&quot;_blank&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block &quot; src=&quot;https://files.realpython.com/media/add-function.38115f478105.png&quot; width=&quot;340&quot; height=&quot;66&quot; srcset=&quot;/cdn-cgi/image/width=85,format=auto/https://files.realpython.com/media/add-function.38115f478105.png 85w, /cdn-cgi/image/width=113,format=auto/https://files.realpython.com/media/add-function.38115f478105.png 113w, /cdn-cgi/image/width=170,format=auto/https://files.realpython.com/media/add-function.38115f478105.png 170w, /cdn-cgi/image/width=340,format=auto/https://files.realpython.com/media/add-function.38115f478105.png 340w&quot; sizes=&quot;(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)&quot; alt=&quot;Add Function&quot; data-asset=&quot;6369&quot;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Now, say that &lt;em&gt;x&lt;/em&gt; is equal to 4 and &lt;em&gt;y&lt;/em&gt; is 2. You can find the value of &lt;em&gt;z&lt;/em&gt; by &lt;em&gt;evaluating&lt;/em&gt; the function. In other words, you add 4 + 2 to get 6 as a result. That‚Äôs it!&lt;/p&gt;
&lt;p&gt;Functions are also used in programming. In fact, functions are so fundamental to software development that virtually all modern, mainstream programming languages support them. In programming, a &lt;a href=&quot;/ref/glossary/function/&quot; class=&quot;ref-link&quot;&gt;function&lt;/a&gt; is a self-contained block of code that encapsulates a specific task under a descriptive name that you can reuse in different places of your code.&lt;/p&gt;
&lt;p&gt;Many programming languages have built-in functions, and Python is no exception. For example, Python‚Äôs built-in &lt;a href=&quot;https://realpython.com/python-built-in-functions/#knowing-an-objects-identity-id&quot;&gt;&lt;code&gt;id()&lt;/code&gt;&lt;/a&gt; function takes an object as an argument and returns its unique identifier:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Python&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;4390667816&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The integer number in this output uniquely identifies the string object you‚Äôve used as an argument. In &lt;a href=&quot;https://realpython.com/cpython-source-code-guide/&quot;&gt;CPython&lt;/a&gt;, this number represents the memory address where the object is stored.&lt;/p&gt;
&lt;p&gt;Note how similar this notation is to what you find in mathematics. In this example, &lt;code&gt;language&lt;/code&gt; is equivalent to &lt;em&gt;x&lt;/em&gt; or &lt;em&gt;y&lt;/em&gt;, and the pair of parentheses &lt;em&gt;calls&lt;/em&gt; the function to run its code, comparable to evaluating a math function. You‚Äôll learn more about &lt;a href=&quot;#calling-functions-in-python&quot;&gt;calling Python functions&lt;/a&gt; in a moment.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To learn more about built-in functions, check out &lt;a href=&quot;https://realpython.com/python-built-in-functions/&quot;&gt;Python‚Äôs Built-in Functions: A Complete Exploration&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Similarly, the built-in &lt;a href=&quot;https://realpython.com/len-python-function/&quot;&gt;&lt;code&gt;len()&lt;/code&gt;&lt;/a&gt; function takes a data collection as an argument and returns its length:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this example, the list of numbers has ten values, so &lt;code&gt;len()&lt;/code&gt; returns &lt;code&gt;10&lt;/code&gt;. You &lt;a href=&quot;https://realpython.com/python-assignment-operator/&quot;&gt;assign&lt;/a&gt; this value to the &lt;code&gt;items&lt;/code&gt; &lt;a href=&quot;https://realpython.com/python-variables/&quot;&gt;variable&lt;/a&gt;, which is equivalent to &lt;em&gt;z&lt;/em&gt; in the mathematical equation you saw before.&lt;/p&gt;
&lt;p&gt;Most programming languages‚Äîincluding Python‚Äîallow you to define your own functions. When you define a Python function, you decide whether it takes arguments. You‚Äôre also responsible for how the function internally computes its result.&lt;/p&gt;
&lt;p&gt;Once you‚Äôve defined a function, you can call it from different parts of your code to execute its specific computation or action. When the function finishes running, it returns to the location where you called it.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/defining-your-own-python-function/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/defining-your-own-python-function/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: Defining Your Own Python Function</title>
      <id>https://realpython.com/quizzes/python-function/</id>
      <link href="https://realpython.com/quizzes/python-function/"/>
      <updated>2025-06-11T12:00:00+00:00</updated>
      <summary>In this quiz, you&#x27;ll test your understanding of defining and calling Python functions. You&#x27;ll revisit the def keyword, parameters, arguments, and more.</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of &lt;a href=&quot;https://realpython.com/defining-your-own-python-function/&quot;&gt;Defining Your Own Python Function&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll revisit how to define a function with the &lt;code&gt;def&lt;/code&gt; keyword, specify parameters, pass arguments, and call your functions to make code modular and reusable. You&amp;rsquo;ll also see how functions help organize and maintain your Python projects.&lt;/p&gt;
&lt;p&gt;Ready to demonstrate your skills? Let&amp;rsquo;s begin!&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Python Continuous Integration and Deployment Using GitHub Actions</title>
      <id>https://realpython.com/courses/cicd-github-actions/</id>
      <link href="https://realpython.com/courses/cicd-github-actions/"/>
      <updated>2025-06-10T14:00:00+00:00</updated>
      <summary>Agile methodologies rely on robust DevOps systems to manage and automate common tasks in a continually changing codebase. GitHub Actions can help.</summary>
      <content type="html">
        &lt;p&gt;Creating software is an achievement worth celebrating. But software is never static. Bugs need to be fixed, features need to be added, and security demands regular updates. In today&amp;rsquo;s landscape, with agile methodologies dominating, robust &lt;a href=&quot;https://realpython.com/learning-paths/python-devops/&quot;&gt;DevOps&lt;/a&gt; systems are crucial for managing an evolving codebase. That&amp;rsquo;s where GitHub Actions shine, empowering Python developers to automate workflows and ensure their projects adapt seamlessly to change.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub Actions&lt;/strong&gt; for Python empowers developers to automate workflows efficiently. This enables teams to maintain software quality while adapting to constant change.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Continuous Integration and Continuous Deployment (CI/CD)&lt;/strong&gt; systems help produce well-tested, high-quality software and streamline deployment. GitHub Actions makes CI/CD accessible to all, allowing automation and customization of workflows directly in your repository. This free service enables developers to execute their software development processes efficiently, improving productivity and code reliability.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this video course, you&amp;rsquo;ll learn how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;GitHub Actions&lt;/strong&gt; and &lt;strong&gt;workflows&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Automate &lt;strong&gt;linting, testing, and deployment&lt;/strong&gt; of a Python project&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Secure credentials&lt;/strong&gt; used for automation&lt;/li&gt;
&lt;li&gt;Automate &lt;strong&gt;security and dependency updates&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Python Hits the Big Screen and Other Python News for June 2025</title>
      <id>https://realpython.com/python-news-june-2025/</id>
      <link href="https://realpython.com/python-news-june-2025/"/>
      <updated>2025-06-09T14:00:00+00:00</updated>
      <summary>Python documentary trailer debuts, Python 3.14 enters beta with key PEPs, and the community celebrates new leadership, events, and tools.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;A newly announced documentary brings Python‚Äôs history and culture to the screen, offering a rare behind-the-scenes look at the people and philosophies that shaped it. Meanwhile, new releases and PEPs continue to drive the evolution in packaging and language design.&lt;/p&gt;
&lt;p&gt;Conferences also continue to foster inclusion, learning, and connection. With new leadership at the PSF and a slate of impactful updates, the Python community is clearly energized and looking ahead.&lt;/p&gt;
&lt;p&gt;Let‚Äôs dive into the biggest developments shaping Python this month.&lt;/p&gt;
&lt;h2 id=&quot;python-documentary-trailer-released&quot;&gt;Python Documentary Trailer Released&lt;a class=&quot;headerlink&quot; href=&quot;#python-documentary-trailer-released&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCsUalyRg43M8D60mtHe6YcA&quot;&gt;CultRepo&lt;/a&gt;, formerly known as Honeypot, has unveiled the trailer for its upcoming feature-length documentary &lt;a href=&quot;https://www.youtube.com/watch?v=pqBqdNIPrbo&quot;&gt;&lt;em&gt;Python: The Documentary&lt;/em&gt;&lt;/a&gt;, set to premiere on YouTube later this year. Known for high-quality open-source origin stories like those of &lt;a href=&quot;https://youtu.be/OrxmtDw4pVI?si=6dn5qEraWTqWBq27&quot;&gt;Vue.js&lt;/a&gt;, &lt;a href=&quot;https://youtu.be/8pDqJVdNa44?si=pZRWiAY1tE7JKogG&quot;&gt;React&lt;/a&gt;, and &lt;a href=&quot;https://youtu.be/LB8KwiiUGy0?si=rweXJtAuocPHe9SY&quot;&gt;Node.js&lt;/a&gt;, CultRepo is returning to form with a long-awaited tribute to our beloved programming language.&lt;/p&gt;
&lt;p&gt;The documentary promises a deep dive into Python‚Äôs cultural and technical journey, featuring interviews with key contributors including &lt;a href=&quot;https://gvanrossum.github.io/&quot;&gt;Guido van Rossum&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/interview-mariatta-wijaya/&quot;&gt;Mariatta Wijaya&lt;/a&gt;, &lt;a href=&quot;https://realpython.com/podcasts/rpp/249/&quot;&gt;Brett Cannon&lt;/a&gt;, and many others who‚Äôve shaped Python‚Äôs legacy.&lt;/p&gt;
&lt;p&gt;The trailer generated &lt;a href=&quot;https://www.linkedin.com/feed/update/urn:li:activity:7330147800946552833/&quot;&gt;buzz across social media&lt;/a&gt; and the Python community after debuting at PyCon US. In the first 15 hours alone, it racked up over 35,000 YouTube views.&lt;/p&gt;
&lt;h2 id=&quot;python-3140-beta-feature-freeze-begins&quot;&gt;Python 3.14.0 Beta Feature Freeze Begins&lt;a class=&quot;headerlink&quot; href=&quot;#python-3140-beta-feature-freeze-begins&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After a busy alpha cycle, Python 3.14 has entered beta with the release of versions &lt;a href=&quot;https://www.python.org/downloads/release/python-3140b1/&quot;&gt;3.14.0b1&lt;/a&gt; and &lt;a href=&quot;https://www.python.org/downloads/release/python-3140b2/&quot;&gt;3.14.0b2&lt;/a&gt;. This milestone marks the &lt;strong&gt;feature freeze&lt;/strong&gt;, shifting the development focus to bug fixes, polish, and documentation ahead of the final release in October 2025.&lt;/p&gt;
&lt;p&gt;Python 3.14 is shaping up to be a feature-packed release. Highlights include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Template strings&lt;/strong&gt; for safer string processing, allowing expressions like &lt;code&gt;t&quot;Hello {name}&quot;&lt;/code&gt; to capture string components and interpolated values as structured data before formatting. This allows for custom processing and helps prevent injection attacks in templating scenarios.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deferred annotations&lt;/strong&gt; as the new default, meaning type hints are stored as strings rather than evaluated immediately. This reduces import overhead and allows forward references without using quotes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sigstore&lt;/strong&gt; replacing PGP for release verification, offering a modern, keyless signing approach that leverages certificate transparency and removes the complexity of key management that has long hindered PGP adoption.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enhanced JIT compiler&lt;/strong&gt; with continued improvements to the &lt;a href=&quot;https://realpython.com/python313-free-threading-jit/#jit-compiles-python-to-machine-code&quot;&gt;copy-and-patch&lt;/a&gt; technique introduced in Python 3.13, providing performance changes ranging from 10% slower to 20% faster depending on workload.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Safe external debugger interface&lt;/strong&gt; enabling &lt;code&gt;pdb&lt;/code&gt; to attach to running Python processes by process ID, allowing real-time debugging of live applications without stopping or restarting them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The timeline remains on track for the final release in October 2025, with additional beta releases expected throughout the summer. Users can expect improved startup performance, better type checking capabilities, and enhanced security verification processes.&lt;/p&gt;
&lt;p&gt;You can preview the upcoming changes by &lt;a href=&quot;https://realpython.com/python-pre-release/&quot;&gt;installing the beta release&lt;/a&gt; in an isolated environment, and help improve Python 3.14 by reporting bugs or compatibility issues.&lt;/p&gt;
&lt;h2 id=&quot;three-accepted-peps-tackle-typing-installation-and-compression&quot;&gt;Three Accepted PEPs Tackle Typing, Installation, and Compression&lt;a class=&quot;headerlink&quot; href=&quot;#three-accepted-peps-tackle-typing-installation-and-compression&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-news-june-2025/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-news-june-2025/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #252: Rodrigo Gir√£o Serr√£o: Python Training, itertools, and Idioms</title>
      <id>https://realpython.com/podcasts/rpp/252/</id>
      <link href="https://realpython.com/podcasts/rpp/252/"/>
      <updated>2025-06-06T12:00:00+00:00</updated>
      <summary>Once you&#x27;ve learned the vocabulary and syntax of the Python language, how do you progress into learning the right combinations to put into your code? How can Python&#x27;s built-in itertools library enhance your skills? This week on the show, we speak with Rodrigo Gir√£o Serr√£o about teaching Python through his blog and his passion for the itertools library.</summary>
      <content type="html">
        &lt;p&gt;Once you&#x27;ve learned the vocabulary and syntax of the Python language, how do you progress into learning the right combinations to put into your code? How can Python&#x27;s built-in itertools library enhance your skills? This week on the show, we speak with Rodrigo Gir√£o Serr√£o about teaching Python through his blog and his passion for the itertools library.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>How to Find an Absolute Value in Python</title>
      <id>https://realpython.com/python-absolute-value/</id>
      <link href="https://realpython.com/python-absolute-value/"/>
      <updated>2025-06-04T14:00:00+00:00</updated>
      <summary>Learn how to calculate the Python absolute value with abs(), implement the math behind it from scratch, and customize it in your own classes.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Learn how to work with absolute values in Python using the built-in &lt;code&gt;abs()&lt;/code&gt; function for numbers, arrays, and custom objects. This tutorial shows you how to implement the absolute value function from scratch, use &lt;code&gt;abs()&lt;/code&gt; with numbers, and customize its behavior for data types like NumPy arrays and pandas Series.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can implement the absolute value function in Python using &lt;strong&gt;conditional statements&lt;/strong&gt; or &lt;strong&gt;mathematical operations&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Python‚Äôs &lt;strong&gt;built-in &lt;code&gt;abs()&lt;/code&gt; function&lt;/strong&gt; efficiently handles integers, floating-point numbers, complex numbers, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NumPy&lt;/strong&gt; and &lt;strong&gt;pandas&lt;/strong&gt; extend the &lt;code&gt;abs()&lt;/code&gt; function to work directly with &lt;strong&gt;arrays&lt;/strong&gt; and &lt;strong&gt;Series&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You can customize the behavior of &lt;code&gt;abs()&lt;/code&gt; for your &lt;strong&gt;own data types&lt;/strong&gt; by implementing the &lt;code&gt;.__abs__()&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;abs()&lt;/code&gt; function can process &lt;strong&gt;fractions&lt;/strong&gt; and &lt;strong&gt;decimals&lt;/strong&gt; from Python‚Äôs standard library.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don‚Äôt worry if your mathematical knowledge of the absolute value function is a little rusty. You‚Äôll begin by refreshing your memory before diving deeper into Python code. That said, feel free to skip the next section and jump right into the nitty-gritty details that follow.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-absolute-value-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-absolute-value-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code&lt;/a&gt; that you‚Äôll use to find absolute values in Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúHow to Find an Absolute Value in Python‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/python-absolute-value/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #abe0e6;&quot; alt=&quot;How to Find the Absolute Value in Python&quot; src=&quot;https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-to-Find-Absolute-Values-in-Python_Watermarked.8fd4b05b9475.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/python-absolute-value/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;How to Find an Absolute Value in Python&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;In this quiz, you&#x27;ll test your knowledge of calculating absolute values in Python, mastering both built-in functions and common use cases to improve your coding accuracy.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;defining-the-absolute-value&quot;&gt;Defining the Absolute Value&lt;a class=&quot;headerlink&quot; href=&quot;#defining-the-absolute-value&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The absolute value lets you determine the &lt;strong&gt;size&lt;/strong&gt; or &lt;strong&gt;magnitude&lt;/strong&gt; of an object, such as a number or a &lt;a href=&quot;https://en.wikipedia.org/wiki/Vector_(mathematics_and_physics)&quot;&gt;vector&lt;/a&gt;, regardless of its direction. &lt;a href=&quot;https://en.wikipedia.org/wiki/Real_number&quot;&gt;Real numbers&lt;/a&gt; can have one of two directions when you ignore zero: they can be either positive or negative. On the other hand, &lt;a href=&quot;https://realpython.com/python-complex-numbers/&quot;&gt;complex numbers&lt;/a&gt; and vectors can have many more directions.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When you take the absolute value of a number, you lose information about its sign or, more generally, its direction.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Consider a temperature measurement as an example. If the thermometer reads -12¬∞C, then you can say it‚Äôs twelve degrees Celsius below freezing. Notice how you decomposed the temperature in the last sentence into a magnitude, twelve, and a sign. The phrase &lt;em&gt;below freezing&lt;/em&gt; means the same as below zero degrees Celsius. The temperature‚Äôs size or absolute value is identical to the absolute value of the much warmer +12¬∞C.&lt;/p&gt;
&lt;p&gt;Using mathematical notation, you can define the absolute value of ùë• as a &lt;a href=&quot;https://en.wikipedia.org/wiki/Piecewise&quot;&gt;piecewise function&lt;/a&gt;, which behaves differently depending on the range of input values. A common symbol for absolute value consists of two vertical lines:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-50&quot; src=&quot;https://files.realpython.com/media/abs_pieceswise.850458ee3c6a.png&quot; width=&quot;731&quot; height=&quot;249&quot; srcset=&quot;/cdn-cgi/image/width=182,format=auto/https://files.realpython.com/media/abs_pieceswise.850458ee3c6a.png 182w, /cdn-cgi/image/width=243,format=auto/https://files.realpython.com/media/abs_pieceswise.850458ee3c6a.png 243w, /cdn-cgi/image/width=365,format=auto/https://files.realpython.com/media/abs_pieceswise.850458ee3c6a.png 365w, /cdn-cgi/image/width=731,format=auto/https://files.realpython.com/media/abs_pieceswise.850458ee3c6a.png 731w&quot; sizes=&quot;(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)&quot; alt=&quot;Absolute Value Defined as a Piecewise Function&quot; data-asset=&quot;4505&quot;&gt;&lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Absolute Value Defined as a Piecewise Function&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This function returns values greater than or equal to zero without alteration. On the other hand, values smaller than zero have their sign flipped from a minus to a plus. Algebraically, this is equivalent to taking the square root of a number squared:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-33&quot; src=&quot;https://files.realpython.com/media/abs_algebraic.77816b2a997b.png&quot; width=&quot;350&quot; height=&quot;102&quot; srcset=&quot;/cdn-cgi/image/width=87,format=auto/https://files.realpython.com/media/abs_algebraic.77816b2a997b.png 87w, /cdn-cgi/image/width=116,format=auto/https://files.realpython.com/media/abs_algebraic.77816b2a997b.png 116w, /cdn-cgi/image/width=175,format=auto/https://files.realpython.com/media/abs_algebraic.77816b2a997b.png 175w, /cdn-cgi/image/width=350,format=auto/https://files.realpython.com/media/abs_algebraic.77816b2a997b.png 350w&quot; sizes=&quot;(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)&quot; alt=&quot;Absolute Value Defined Algebraically&quot; data-asset=&quot;4506&quot;&gt;&lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Absolute Value Defined Algebraically&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;When you square a real number, you always get a positive result, even if the number that you started with was negative. For example, the square of -12 and the square of 12 have the same value, equal to 144. Later, when you compute the square root of 144, you‚Äôll only get 12 without the minus sign.&lt;/p&gt;
&lt;p&gt;Geometrically, you can think of an absolute value as the &lt;strong&gt;distance&lt;/strong&gt; from the origin, which is zero on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Number_line&quot;&gt;number line&lt;/a&gt; in the case of the temperature reading from before:&lt;/p&gt;
&lt;figure class=&quot;js-lightbox&quot;&gt;&lt;a href=&quot;https://files.realpython.com/media/plot_number_line.293268c27c16.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block &quot; src=&quot;https://files.realpython.com/media/plot_number_line.293268c27c16.jpg&quot; width=&quot;1920&quot; height=&quot;600&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/plot_number_line.293268c27c16.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/plot_number_line.293268c27c16.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/plot_number_line.293268c27c16.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/plot_number_line.293268c27c16.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)&quot; alt=&quot;Absolute Value on a Number Line&quot; data-asset=&quot;4504&quot;&gt;&lt;/a&gt;&lt;figcaption class=&quot;figure-caption text-center&quot;&gt;Absolute Value on a Number Line&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;To calculate this distance, you can subtract the origin from the temperature reading (-12¬∞C - 0¬∞C = -12¬∞C) or the other way around (0¬∞C - (-12¬∞C) = +12¬∞C), and then drop the sign of the result. Subtracting zero doesn‚Äôt make much difference here, but the reference point may sometimes be shifted. That‚Äôs the case for vectors bound to a fixed point in space, which becomes their origin.&lt;/p&gt;
&lt;p&gt;Vectors, just like numbers, convey information about the &lt;strong&gt;direction&lt;/strong&gt; and the &lt;strong&gt;magnitude&lt;/strong&gt; of a physical quantity, but in more than one dimension. For example, you can express the &lt;a href=&quot;https://en.wikipedia.org/wiki/Velocity&quot;&gt;velocity&lt;/a&gt; of a falling snowflake as a three-dimensional vector:&lt;/p&gt;
&lt;figure&gt;
  &lt;div class=&quot;embed-responsive embed-responsive-16by9 rounded mb-3 &quot;&gt;
    &lt;iframe loading=&quot;lazy&quot; class=&quot;embed-responsive-item&quot; src=&quot;https://player.vimeo.com/video/734381007?background=1&quot; frameborder=&quot;0&quot; allow=&quot;fullscreen&quot; allowfullscreen&gt;&lt;/iframe&gt;
  &lt;/div&gt;

&lt;/figure&gt;

&lt;p&gt;This vector indicates the snowflake‚Äôs current position relative to the origin of the coordinate system. It also shows the snowflake‚Äôs direction and pace of motion through the space. The longer the vector, the greater the magnitude of the snowflake‚Äôs speed. As long as the coordinates of the vector‚Äôs initial and terminal points are expressed in meters, calculating its length will get you the snowflake‚Äôs &lt;a href=&quot;https://en.wikipedia.org/wiki/Speed&quot;&gt;speed&lt;/a&gt; measured in meters per unit of time.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There are two ways to look at a vector. A &lt;em&gt;bound&lt;/em&gt; vector is an ordered pair of fixed points in space, whereas a &lt;em&gt;free&lt;/em&gt; vector only tells you about the displacement of the coordinates from point A to point B without revealing their absolute locations. Consider the following code snippet as an example:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound_vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bound_vector&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[[1, 2, 3], [3, 2, 1]]&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;free_vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;free_vector&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;[2, 0, -2]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A bound vector wraps both points, providing quite a bit of information. In contrast, a free vector only represents the shift from A to B. You can calculate a free vector by subtracting the initial point, A, from the terminal one, B. One way to do so is by iterating over the consecutive pairs of coordinates with a &lt;a href=&quot;https://realpython.com/list-comprehension-python/&quot;&gt;list comprehension&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A free vector is essentially a bound vector translated to the origin of the coordinate system, so it begins at zero.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;strong&gt;length&lt;/strong&gt; of a vector, also known as its magnitude, is the distance between its initial and terminal points, ùê¥ and ùêµ, which you can calculate using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Norm_(mathematics)#Euclidean_norm&quot;&gt;Euclidean norm&lt;/a&gt;:&lt;/p&gt;
&lt;figure class=&quot;&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-50&quot; src=&quot;https://files.realpython.com/media/abs_euclidean.7d19dd455597.png&quot; width=&quot;900&quot; height=&quot;400&quot; srcset=&quot;/cdn-cgi/image/width=225,format=auto/https://files.realpython.com/media/abs_euclidean.7d19dd455597.png 225w, /cdn-cgi/image/width=300,format=auto/https://files.realpython.com/media/abs_euclidean.7d19dd455597.png 300w, /cdn-cgi/image/width=450,format=auto/https://files.realpython.com/media/abs_euclidean.7d19dd455597.png 450w, /cdn-cgi/image/width=900,format=auto/https://files.realpython.com/media/abs_euclidean.7d19dd455597.png 900w&quot; sizes=&quot;(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)&quot; alt=&quot;The Length of a Bound Vector as a Euclidean Norm&quot; data-asset=&quot;4507&quot;&gt;&lt;figcaption class=&quot;figure-caption text-center&quot;&gt;The Length of a Bound Vector as a Euclidean Norm&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p&gt;This formula calculates the length of the ùëõ-dimensional vector ùê¥ùêµ, by summing the squares of the differences between the coordinates of points ùê¥ and ùêµ in each dimension indexed by ùëñ. For a free vector, the initial point, ùê¥, becomes the origin of the coordinate system‚Äîor zero‚Äîwhich simplifies the formula, as you only need to square the coordinates of your vector.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-absolute-value/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-absolute-value/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: How to Find an Absolute Value in Python</title>
      <id>https://realpython.com/quizzes/python-absolute-value/</id>
      <link href="https://realpython.com/quizzes/python-absolute-value/"/>
      <updated>2025-06-04T12:00:00+00:00</updated>
      <summary>In this quiz, you&#x27;ll test your knowledge of calculating absolute values in Python, mastering both built-in functions and common use cases to improve your coding accuracy.</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of &lt;a href=&quot;https://realpython.com/python-absolute-value/&quot;&gt;How to Find an Absolute Value in Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By working through this quiz, you&amp;rsquo;ll revisit key concepts such as how to use Python&amp;rsquo;s built-in functions to compute absolute values, apply them in mathematical operations, and handle different data types effectively.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Execute Your Python Scripts With a Shebang</title>
      <id>https://realpython.com/courses/execute-python-scripts-with-shebang/</id>
      <link href="https://realpython.com/courses/execute-python-scripts-with-shebang/"/>
      <updated>2025-06-03T14:00:00+00:00</updated>
      <summary>In this video course, you&#x27;ll learn when and how to use the shebang line in your Python scripts to execute them from a Unix-like shell.</summary>
      <content type="html">
        &lt;p&gt;In shell scripts, the shebang line (&lt;code&gt;#!&lt;/code&gt;) specifies the path to the interpreter that should execute the file. You can place it at the top of your Python file to tell the shell how to run your script, allowing you to execute the script directly without typing &lt;code&gt;python&lt;/code&gt; before the script name. The shebang is essential for Unix-like systems but ignored on Windows unless using specific compatibility layers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this video course, you&amp;rsquo;ll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A shebang &lt;strong&gt;specifies the path to the Python interpreter&lt;/strong&gt; in scripts, allowing direct execution.&lt;/li&gt;
&lt;li&gt;You should &lt;strong&gt;include a shebang when a script needs direct execution&lt;/strong&gt;, but not in import-only modules.&lt;/li&gt;
&lt;li&gt;Best practices for shebangs include &lt;strong&gt;using &lt;code&gt;/usr/bin/env&lt;/code&gt; for portability&lt;/strong&gt; and ensuring the script is executable.&lt;/li&gt;
&lt;li&gt;Shebangs have limitations, such as being &lt;strong&gt;ignored on Windows&lt;/strong&gt; without compatibility layers like WSL.&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>How Can You Structure Your Python Script?</title>
      <id>https://realpython.com/python-script-structure/</id>
      <link href="https://realpython.com/python-script-structure/"/>
      <updated>2025-06-02T14:00:00+00:00</updated>
      <summary>Structure your Python script like a pro. This guide shows you how to organize your code, manage dependencies with PEP 723, and handle command-line arguments.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;You may have begun your Python journey interactively, exploring ideas within Jupyter Notebooks or through the Python REPL. While that‚Äôs great for quick experimentation and immediate feedback, you‚Äôll likely find yourself saving code into &lt;code&gt;.py&lt;/code&gt; files. However, as your codebase grows, your Python script structure efficiency becomes increasingly important.&lt;/p&gt;
&lt;p&gt;Transitioning from interactive environments to structured scripts helps promote readability, enabling better collaboration and more robust development practices. This tutorial transforms messy scripts into well-organized, shareable code. Along the way, you‚Äôll learn standard Python practices and tools. These techniques bridge the gap between quick scripting and disciplined software development.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll know how to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Organize your Python scripts logically with &lt;strong&gt;functions&lt;/strong&gt;, &lt;strong&gt;constants&lt;/strong&gt;, and appropriate &lt;strong&gt;import&lt;/strong&gt; practices.&lt;/li&gt;
&lt;li&gt;Efficiently manage your script‚Äôs state using data structures such as &lt;strong&gt;enumerations&lt;/strong&gt; and &lt;strong&gt;data classes&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Enhance interactivity through &lt;strong&gt;command-line arguments&lt;/strong&gt; and improve robustness with structured feedback using &lt;strong&gt;logging&lt;/strong&gt; and libraries like &lt;strong&gt;Rich&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Create &lt;strong&gt;self-contained, shareable scripts&lt;/strong&gt; by handling dependencies inline using &lt;strong&gt;PEP 723&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Without further ado, it‚Äôs time to start working through a concrete script that interacts with a web server to obtain and manipulate a machine learning dataset.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-script-structure-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-script-structure-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code&lt;/a&gt; you‚Äôll use to learn how you can structure your Python script.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúHow Can You Structure Your Python Script?‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/python-script-structure/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #abe0e6;&quot; alt=&quot;How Can You Structure Your Python Script?&quot; src=&quot;https://files.realpython.com/media/How-Can-You-Structure-Your-Python-Script_Watermarked.680ffece0a52.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/How-Can-You-Structure-Your-Python-Script_Watermarked.680ffece0a52.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/How-Can-You-Structure-Your-Python-Script_Watermarked.680ffece0a52.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/How-Can-You-Structure-Your-Python-Script_Watermarked.680ffece0a52.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/How-Can-You-Structure-Your-Python-Script_Watermarked.680ffece0a52.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/python-script-structure/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;How Can You Structure Your Python Script?&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;In this quiz, you&#x27;ll test your understanding of organizing and structuring Python scripts. You&#x27;ll revisit key concepts about best practices for writing clear, maintainable, and executable Python code.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;setting-the-stage-for-scripting&quot;&gt;Setting the Stage for Scripting&lt;a class=&quot;headerlink&quot; href=&quot;#setting-the-stage-for-scripting&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Throughout this tutorial, you‚Äôll apply the structuring concepts by building a Python script step-by-step. The goal of this script will be to work with the well-known &lt;a href=&quot;https://archive.ics.uci.edu/dataset/53/iris&quot;&gt;Iris dataset&lt;/a&gt;, a classic dataset in &lt;a href=&quot;https://realpython.com/learning-paths/machine-learning-python/&quot;&gt;machine learning&lt;/a&gt; containing measurements for three species of Iris flowers.&lt;/p&gt;
&lt;p&gt;Your script, called &lt;code&gt;iris_summary.py&lt;/code&gt;, will evolve through several stages, demonstrating different structural improvements. These stages are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set Up the Initial Script:&lt;/strong&gt; Begin with a functional script using standard language features. Apply a foundational structure using named constants for clarity and the entry-point guard to separate executable code from importable definitions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Integrate External Libraries and Dependencies:&lt;/strong&gt; Incorporate third-party libraries when needed to leverage specialized functionality or simplify complex tasks. Declare and manage script dependencies within the file using standards like &lt;a href=&quot;https://peps.python.org/pep-0723/&quot;&gt;PEP 723&lt;/a&gt; for better reproducibility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Handle Command-Line Arguments:&lt;/strong&gt; Add command-line arguments using helper libraries to make the script interactive and configurable. Define a clear &lt;code&gt;main()&lt;/code&gt; function to encapsulate the core script logic triggered by the command-line interface (CLI).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Structure Internal Data:&lt;/strong&gt;  Improve how data is represented by selecting appropriate data structures. Move beyond basic types and use constructs like &lt;a href=&quot;https://realpython.com/python-enum/&quot;&gt;&lt;code&gt;enum&lt;/code&gt;&lt;/a&gt; for fixed choices, or &lt;a href=&quot;https://realpython.com/python-data-classes/&quot;&gt;&lt;code&gt;dataclass&lt;/code&gt;&lt;/a&gt;  and &lt;a href=&quot;https://realpython.com/python-namedtuple/&quot;&gt;&lt;code&gt;namedtuple&lt;/code&gt;&lt;/a&gt; for structured records.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Enhance Feedback and Robustness:&lt;/strong&gt; Refine how the script communicates its progress and results. Implement structured logging instead of relying solely on &lt;a href=&quot;https://realpython.com/python-print/&quot;&gt;&lt;code&gt;print()&lt;/code&gt;&lt;/a&gt;. Use &lt;a href=&quot;https://realpython.com/python-assert-statement/&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; statements for internal consistency checks during development, and improve the terminal output presentation, potentially using libraries designed for richer interfaces, like &lt;a href=&quot;https://realpython.com/python-rich-package/&quot;&gt;Rich&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By following these steps, you‚Äôll see how structure transforms a basic script into something more robust, readable, and shareable. Each new concept will be introduced and immediately applied to the evolving Iris script.&lt;/p&gt;
&lt;p&gt;Before diving into the specifics of script structure, it‚Äôs important to understand some foundational elements that make your Python scripts executable and well-organized.&lt;/p&gt;
&lt;h3 id=&quot;using-the-shebang-line&quot;&gt;Using the Shebang Line&lt;a class=&quot;headerlink&quot; href=&quot;#using-the-shebang-line&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix-like&quot;&gt;Unix-like&lt;/a&gt; systems, such as Linux and macOS, you can make your Python script directly executable from the command line, like &lt;code&gt;./iris_summary.py&lt;/code&gt;, instead of always typing &lt;code&gt;python iris_summary.py&lt;/code&gt;. This involves making the file executable with &lt;code&gt;chmod +x iris_summary.py&lt;/code&gt;, and adding a &lt;a href=&quot;https://en.wikipedia.org/wiki/Shebang_(Unix)&quot;&gt;shebang line&lt;/a&gt; at the top of your file.&lt;/p&gt;
&lt;p&gt;The shebang tells the system which interpreter to use. The recommended, portable shebang for Python is:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;python&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;hll&quot;&gt;&lt;span class=&quot;ch&quot;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# Your script logic goes here...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This small addition signals that your file is intended to be run as a standalone script.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The dedicated tutorial &lt;a href=&quot;https://realpython.com/python-shebang/&quot;&gt;Executing Python Scripts With a Shebang&lt;/a&gt; provides a comprehensive look at how a shebang works, why &lt;code&gt;/usr/bin/env&lt;/code&gt; is used, how to handle arguments, and how to account for platform differences.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now that you know &lt;em&gt;how&lt;/em&gt; to tell the operating system how to run your script, you can focus on organizing the code within the script, starting with &lt;strong&gt;imports&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;organizing-the-import-statements&quot;&gt;Organizing the Import Statements&lt;a class=&quot;headerlink&quot; href=&quot;#organizing-the-import-statements&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As your script starts interacting with more modules, the &lt;a href=&quot;https://docs.python.org/3/reference/simple_stmts.html#the-import-statement&quot;&gt;&lt;code&gt;import&lt;/code&gt; statements&lt;/a&gt; at the top of your file become important for clarity and &lt;a href=&quot;https://realpython.com/python-code-quality/&quot;&gt;code quality&lt;/a&gt;. Python‚Äôs official style guide, &lt;a href=&quot;https://realpython.com/python-pep8/&quot;&gt;PEP 8&lt;/a&gt;, recommends specific conventions for ordering imports, which significantly improves readability. Following these conventions is standard practice, and there are modern tools like &lt;a href=&quot;https://realpython.com/ruff-python/&quot;&gt;Ruff&lt;/a&gt; to enforce these conventions.&lt;/p&gt;
&lt;p&gt;Following a standard order helps anyone reading your code quickly understand its dependencies. The recommended grouping is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Standard Library Imports:&lt;/strong&gt; Modules included with Python, like &lt;a href=&quot;https://realpython.com/python-pathlib/&quot;&gt;&lt;code&gt;pathlib&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Third-Party Imports:&lt;/strong&gt; Libraries you‚Äôve &lt;a href=&quot;https://realpython.com/what-is-pip/&quot;&gt;installed with &lt;code&gt;pip&lt;/code&gt;&lt;/a&gt;, like &lt;a href=&quot;https://realpython.com/python-requests/&quot;&gt;&lt;code&gt;requests&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Local Imports:&lt;/strong&gt; Local modules, either application files or libraries, such as when importing another &lt;code&gt;.py&lt;/code&gt; file you wrote.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A good scripting practice for sharing code is to avoid local or library-specific imports and to ensure that only cross-platform third-party packages are used.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-script-structure/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-script-structure/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: How Can You Structure Your Python Script?</title>
      <id>https://realpython.com/quizzes/python-script-structure/</id>
      <link href="https://realpython.com/quizzes/python-script-structure/"/>
      <updated>2025-06-01T12:00:00+00:00</updated>
      <summary>In this quiz, you&#x27;ll test your understanding of organizing and structuring Python scripts. You&#x27;ll revisit key concepts about best practices for writing clear, maintainable, and executable Python code.</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of the tutorial &lt;a href=&quot;https://realpython.com/python-script-structure/&quot;&gt;How Can You Structure Your Python Script?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;By working through this quiz, you&amp;rsquo;ll revisit best practices for organizing your Python scripts, including setting up the main entry point, using imports effectively, and writing code that can be reused as modules or run as standalone scripts.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #251: Python Thread Safety &amp; Managing Projects With uv</title>
      <id>https://realpython.com/podcasts/rpp/251/</id>
      <link href="https://realpython.com/podcasts/rpp/251/"/>
      <updated>2025-05-30T12:00:00+00:00</updated>
      <summary>What are the ways you can manage multithreaded code in Python? What synchronization techniques are available within Python&#x27;s threading module? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;What are the ways you can manage multithreaded code in Python? What synchronization techniques are available within Python&#x27;s threading module? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Control Flow Structures in Python</title>
      <id>https://realpython.com/python-control-flow/</id>
      <link href="https://realpython.com/python-control-flow/"/>
      <updated>2025-05-28T14:00:00+00:00</updated>
      <summary>Take control of your code with Python control flow structures. You&#x27;ll learn with real examples using loops, conditionals, try-except blocks, and pattern matching.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Python‚Äôs control flow structures allow you to dictate the order in which statements execute in your program. You can do this by using structures like conditionals, loops, and others.&lt;/p&gt;
&lt;p&gt;Normally, your code executes sequentially. You can modify this behavior using control flow structures that let you make decisions, run specific pieces of code in response to certain conditions, repeat a code block several times, and more.&lt;/p&gt;
&lt;p&gt;Knowing about control flow structures is a fundamental skill for you as a Python developer because they‚Äôll allow you to fine-tune how your programs behave.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Control flow&lt;/strong&gt; in Python refers to the order in which code statements are executed or evaluated.&lt;/li&gt;
&lt;li&gt;Common &lt;strong&gt;control flow statements&lt;/strong&gt; in Python include conditionals with the &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elif&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt; keywords, loops with &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt;, exception handling with &lt;code&gt;try&lt;/code&gt; ‚Ä¶ &lt;code&gt;except&lt;/code&gt;, and structural pattern matching with &lt;code&gt;match&lt;/code&gt; ‚Ä¶ &lt;code&gt;case&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Control flow structures in Python let you &lt;strong&gt;make decisions&lt;/strong&gt;, &lt;strong&gt;repeat tasks&lt;/strong&gt;, and &lt;strong&gt;handle exceptions&lt;/strong&gt;, enhancing the dynamism and robustness of your code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To dive deeper into Python‚Äôs control flow, explore how these constructs allow you to write more dynamic and flexible programs by making decisions and handling repetitive tasks efficiently.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-control-flow-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-control-flow-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code&lt;/a&gt; that shows you how to use control flow structures in Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúControl Flow Structures in Python‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/python-control-flow/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #b9abe6;&quot; alt=&quot;Control Flow Structures in Python&quot; src=&quot;https://files.realpython.com/media/Control-Flow-Structures-in-Python_Watermarked-2.333650ffaf49.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Control-Flow-Structures-in-Python_Watermarked-2.333650ffaf49.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Control-Flow-Structures-in-Python_Watermarked-2.333650ffaf49.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Control-Flow-Structures-in-Python_Watermarked-2.333650ffaf49.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Control-Flow-Structures-in-Python_Watermarked-2.333650ffaf49.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/python-control-flow/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;Control Flow Structures in Python&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;In this quiz, you&#x27;ll test your understanding of Python control flow structures, which include conditionals, loops, exception handling, and structural pattern matching. Strengthening these skills will help you write more dynamic, smart, and robust Python code.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;getting-to-know-control-flow-in-python&quot;&gt;Getting to Know Control Flow in Python&lt;a class=&quot;headerlink&quot; href=&quot;#getting-to-know-control-flow-in-python&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Most programming languages, including Python, execute code &lt;em&gt;sequentially&lt;/em&gt; from the top of the source file to the bottom, line by line. This way of running code is entirely logical. It‚Äôs like following a series of steps in order. However, what if you‚Äôre solving a problem with two or more action paths that depend on the result of evaluating a given condition?&lt;/p&gt;
&lt;p&gt;For example, say that you‚Äôre building an online store and need to implement a feature that decides whether a customer is eligible for free shipping. You‚Äôve decided that if the order is greater than $150.00, then the customer gets free shipping. In this situation, you have two action paths:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If the order is less than $150.00, then the customer doesn‚Äôt get free shipping.&lt;/li&gt;
&lt;li&gt;If the order is equal to or greater than $150.00, then the customer gets free shipping.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now, think of a way you could do this with sequential statements. It isn‚Äôt an easy task, right? You‚Äôd need something that allows you to check the order and decide what course of action to take. That‚Äôs exactly what a conditional statement lets you do:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;215.00&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;order_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;You got free shipping!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The shipping fee is $5.00&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;You got free shipping!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Note how the code isn‚Äôt executed sequentially. Instead, the execution path depends on the condition‚Äôs result. Statements and syntax constructs that allow you to alter the normal execution flow as you did in the example above are known as &lt;strong&gt;control flow structures&lt;/strong&gt;.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In programming, the ability of a program to choose between multiple paths of execution based on certain conditions is known as &lt;strong&gt;branching&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In programming, the term &lt;a href=&quot;/ref/glossary/control-flow/&quot; class=&quot;ref-link&quot;&gt;&lt;strong&gt;control flow&lt;/strong&gt;&lt;/a&gt; refers to the order in which individual &lt;a href=&quot;/ref/glossary/statement/&quot; class=&quot;ref-link&quot;&gt;statements&lt;/a&gt; are executed or evaluated within a program. As you already know, the normal flow of execution is sequential. However, you can alter this by using control flow statements, which include &lt;a href=&quot;https://realpython.com/python-conditional-statements/&quot;&gt;conditionals&lt;/a&gt;, &lt;a href=&quot;/ref/glossary/loop/&quot; class=&quot;ref-link&quot;&gt;loops&lt;/a&gt;, and several others.&lt;/p&gt;
&lt;p&gt;Here‚Äôs another example. This time, you need to repeat a task several times. You can do this by duplicating the same line of code as many times as needed:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;python&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    &lt;span class=&quot;mr-2&quot; aria-label=&quot;Filename&quot;&gt;&lt;code style=&quot;color: inherit; background: inherit;&quot;&gt;greeting.py&lt;/code&gt;&lt;/span&gt;
    &lt;div class=&quot;noselect&quot;&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This code works. However, repeating the same code several times is error-prone and introduces &lt;a href=&quot;https://realpython.com/python-code-quality/#maintainability&quot;&gt;maintainability&lt;/a&gt; issues. Additionally, what if you don‚Äôt know the number of repetitions beforehand? In this situation, a loop will save you:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hello!&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hello!&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;Hello!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this example, you use a &lt;a href=&quot;https://realpython.com/python-for-loop/&quot;&gt;&lt;code&gt;for&lt;/code&gt; loop&lt;/a&gt; to run the code three times. This code is much more elegant, flexible, and less repetitive.&lt;/p&gt;
&lt;p&gt;Control flow statements like these let you make decisions, repeat tasks, and handle exceptions, making your code more dynamic and powerful. In short, they let you customize the control flow of your programs. In the rest of this tutorial, you‚Äôll dive into Python‚Äôs most commonly used control flow statements.&lt;/p&gt;
&lt;h2 id=&quot;using-conditional-statements&quot;&gt;Using Conditional Statements&lt;a class=&quot;headerlink&quot; href=&quot;#using-conditional-statements&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You took a quick peek at conditional statements in the previous section. A &lt;strong&gt;conditional statement&lt;/strong&gt; is a syntax construct that lets you execute certain code blocks only when a specific condition is true, while skipping them when the condition is false. It allows your programs to respond to different situations rather than just running sequentially.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/python-control-flow/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/python-control-flow/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: Control Flow Structures in Python</title>
      <id>https://realpython.com/quizzes/python-control-flow/</id>
      <link href="https://realpython.com/quizzes/python-control-flow/"/>
      <updated>2025-05-28T12:00:00+00:00</updated>
      <summary>In this quiz, you&#x27;ll test your understanding of Python control flow structures, which include conditionals, loops, exception handling, and structural pattern matching. Strengthening these skills will help you write more dynamic, smart, and robust Python code.</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of control flow structures in Python. Control flow dictates the order in which your code executes, letting you make choices, repeat work, and handle exceptions to build more flexible, reliable programs. For hands-on examples and a deeper dive, check out the tutorial &lt;a href=&quot;https://realpython.com/python-control-flow/&quot;&gt;Control Flow Structures in Python&lt;/a&gt;.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The LEGB Rule &amp; Understanding Python Scope</title>
      <id>https://realpython.com/courses/legb-rule-python-scope/</id>
      <link href="https://realpython.com/courses/legb-rule-python-scope/"/>
      <updated>2025-05-27T14:00:00+00:00</updated>
      <summary>In this step-by-step video course, you&#x27;ll learn what scopes are, how they work, and how to use them effectively to avoid name collisions in your code.</summary>
      <content type="html">
        &lt;p&gt;The concept of &lt;strong&gt;scope&lt;/strong&gt; rules how &lt;a href=&quot;https://realpython.com/python-variables/&quot;&gt;variables&lt;/a&gt; and names are looked up in your code. It determines the visibility of a variable within the code. The scope of a name or variable depends on the place in your code where you create that variable. The Python scope concept is generally presented using a rule known as the &lt;strong&gt;LEGB rule&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The letters in the acronym LEGB stand for &lt;strong&gt;Local, Enclosing, Global, and Built-in&lt;/strong&gt; scopes. This summarizes not only the Python scope levels but also the sequence of steps that Python follows when resolving names in a program.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this video course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What &lt;strong&gt;scopes&lt;/strong&gt; are and how they work in Python&lt;/li&gt;
&lt;li&gt;Why it&amp;rsquo;s important to know about &lt;strong&gt;Python scope&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;What the &lt;strong&gt;LEGB rule&lt;/strong&gt; is and how Python uses it to resolve names&lt;/li&gt;
&lt;li&gt;How to modify the &lt;strong&gt;standard behavior&lt;/strong&gt; of Python scope using &lt;code&gt;global&lt;/code&gt; and &lt;code&gt;nonlocal&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;What &lt;strong&gt;scope-related tools&lt;/strong&gt; Python offers and how you can use them&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Marimo: A Reactive, Reproducible Notebook</title>
      <id>https://realpython.com/marimo-notebook/</id>
      <link href="https://realpython.com/marimo-notebook/"/>
      <updated>2025-05-26T14:00:00+00:00</updated>
      <summary>Discover how marimo notebook simplifies coding with reactive updates, UI elements, and sandboxing for safe, sharable notebooks.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;&lt;a href=&quot;https://marimo.io&quot;&gt;Marimo notebooks&lt;/a&gt; redefine the notebook experience by offering a reactive environment that addresses the limitations of traditional linear notebooks. With marimo, you can seamlessly reproduce and share content while benefiting from automatic cell updates and a correct execution order. Discover how marimo‚Äôs features make it an ideal tool for documenting research and learning activities.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Marimo notebooks&lt;/strong&gt; automatically update dependent cells, ensuring consistent results across your work.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reactivity&lt;/strong&gt; allows marimo to determine the correct running order of cells using a &lt;strong&gt;directed acyclic graph (DAG)&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sandboxing&lt;/strong&gt; in marimo creates isolated environments for notebooks, preventing package conflicts and ensuring reproducibility.&lt;/li&gt;
&lt;li&gt;You can add &lt;strong&gt;interactivity&lt;/strong&gt; to marimo notebooks using &lt;strong&gt;UI elements&lt;/strong&gt; like sliders and radio buttons.&lt;/li&gt;
&lt;li&gt;Traditional &lt;strong&gt;linear notebooks&lt;/strong&gt; have inherent flaws, such as hidden state issues, that marimo addresses with its reactive design.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Before you can get started with marimo, you‚Äôll need to install it. Fortunately, this is quick and easy to do:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;console&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--yellow&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Shell&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;-m&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pip&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;install&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;marimo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You use &lt;a href=&quot;https://realpython.com/what-is-pip/&quot;&gt;&lt;code&gt;pip&lt;/code&gt;&lt;/a&gt; to install the marimo library on your system. With this done, it‚Äôs time to get started, be amazed, and learn all about a different type of notebook.&lt;/p&gt;
&lt;p&gt;The best way to approach this tutorial is to use the instructions to complete the various examples and try the exercises yourself. If you want copies of the various notebook files created during the tutorial, you‚Äôll find them in your download bundle. The &lt;code&gt;README.md&lt;/code&gt; file provides further details of what‚Äôs in your downloads.&lt;/p&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúMarimo: A Reactive, Reproducible Notebook‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/marimo-notebook/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #fe7e73;&quot; alt=&quot;Marimo: A Reactive, Reproducible Notebook&quot; src=&quot;https://files.realpython.com/media/Showcase-Marimo-Notebook_Watermarked.91bd98028a40.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Showcase-Marimo-Notebook_Watermarked.91bd98028a40.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Showcase-Marimo-Notebook_Watermarked.91bd98028a40.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Showcase-Marimo-Notebook_Watermarked.91bd98028a40.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Showcase-Marimo-Notebook_Watermarked.91bd98028a40.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/marimo-notebook/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;Marimo: A Reactive, Reproducible Notebook&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;This quiz is a great way to reinforce and build on what you&#x27;ve learned about marimo notebooks. You&#x27;ll find most of the answers in the tutorial, but you&#x27;ll need to do some additional research to find some of the answers.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;how-to-get-started-in-a-marimo-notebook&quot;&gt;How to Get Started in a Marimo Notebook&lt;a class=&quot;headerlink&quot; href=&quot;#how-to-get-started-in-a-marimo-notebook&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A notebook is a file where you can write your programming code, run it, and view the output. You can add formatted text to explain how your code works, display charts to clarify results, and even allow your notebook‚Äôs users to try out different scenarios using a customized user interface. Once your notebook is complete, you can save everything in a single file and share your creation with others.&lt;/p&gt;
&lt;p&gt;In this section, you‚Äôll learn to use marimo to create a simple notebook to perform a calculation and clearly display its results.&lt;/p&gt;
&lt;p&gt;Like many notebooks, marimo notebooks consist of cells. The primary cell types are &lt;strong&gt;code cells&lt;/strong&gt;, where you enter and run your Python code, and &lt;strong&gt;Markdown cells&lt;/strong&gt;, where you enter formatted text to augment the code and its output.&lt;/p&gt;
&lt;p&gt;In this first example, you‚Äôll use a marimo notebook and &lt;a href=&quot;https://numpy.org/&quot;&gt;NumPy&lt;/a&gt; to solve a pair of &lt;a href=&quot;https://en.wikipedia.org/wiki/System_of_linear_equations&quot;&gt;simultaneous equations&lt;/a&gt;. To do this, you‚Äôll first need to install the NumPy library:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;console&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--yellow&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Shell&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;-m&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pip&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;install&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;numpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With &lt;a href=&quot;https://realpython.com/numpy-example/&quot;&gt;NumPy&lt;/a&gt; installed, you can now create your notebook by typing the following command into your console:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;console&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--yellow&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Shell&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;marimo&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;edit&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;simultaneous_equations.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When you run this command, you‚Äôll most likely create a new notebook named &lt;code&gt;simultaneous_equations.py&lt;/code&gt; for editing. If you already have a marimo notebook with that name, you‚Äôll open it instead. Either way, your notebook will be ready for you to use within your browser.&lt;/p&gt;
&lt;p&gt;Switch to your web browser, and you‚Äôll see your new notebook. It‚Äôll contain a single cell. Hover your mouse over the cell to reveal a range of icons, each with a tooltip that explains its purpose and shows the associated keyboard shortcuts:&lt;/p&gt;
&lt;figure class=&quot;js-lightbox&quot;&gt;&lt;a href=&quot;https://files.realpython.com/media/ie_marimo_controls.a1f18e3fee0e.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img loading=&quot;lazy&quot; class=&quot;img-fluid mx-auto d-block w-75&quot; src=&quot;https://files.realpython.com/media/ie_marimo_controls.a1f18e3fee0e.jpg&quot; width=&quot;1189&quot; height=&quot;500&quot; srcset=&quot;/cdn-cgi/image/width=297,format=auto/https://files.realpython.com/media/ie_marimo_controls.a1f18e3fee0e.jpg 297w, /cdn-cgi/image/width=396,format=auto/https://files.realpython.com/media/ie_marimo_controls.a1f18e3fee0e.jpg 396w, /cdn-cgi/image/width=594,format=auto/https://files.realpython.com/media/ie_marimo_controls.a1f18e3fee0e.jpg 594w, /cdn-cgi/image/width=1189,format=auto/https://files.realpython.com/media/ie_marimo_controls.a1f18e3fee0e.jpg 1189w&quot; sizes=&quot;(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)&quot; alt=&quot;graphic showing a marimo notebook cell and its controls.&quot; data-asset=&quot;6223&quot;&gt;&lt;/a&gt;&lt;/figure&gt;

&lt;p&gt;Each of the main icons are described in the screenshot above. While most of these are self-explanatory, there are some points you should be aware of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;em&gt;red trash can&lt;/em&gt; icon shown here won‚Äôt appear immediately in your notebook. This is used to delete a cell and will only appear when you add other cells. You can‚Äôt see it yet because all notebooks must have at least one cell. Deleting the last cell is impossible.&lt;/li&gt;
&lt;li&gt;The color of the &lt;em&gt;Run current cell&lt;/em&gt; icon is also significant. If this cell is white, as it is in the screenshot, it‚Äôs up to date and doesn‚Äôt need to be run. Once you start changing cells, you‚Äôll see their &lt;em&gt;Run&lt;/em&gt; icons develop a yellow tinge. This warns you that the cell has become &lt;em&gt;stale&lt;/em&gt;, meaning you must run it to update it.&lt;/li&gt;
&lt;li&gt;Finally, notice that the numbers to the left of each cell indicate the line numbers of the code within the cell. Unlike most other notebooks, there are no numbers to indicate the running order of the cells. This is because marimo allows you to add code cells in any order. Marimo can work out the correct cell running order for itself. Even so, placing cells in an illogical order should be avoided.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When you hover your mouse over some of marimo‚Äôs icons, you‚Äôll see their associated keyboard shortcuts. Unfortunately, they don‚Äôt work correctly in all browsers. If they don‚Äôt work for you, stick to using your mouse. Feel free to try them to find out if they work for you.&lt;/p&gt;
&lt;h3 id=&quot;adding-code-and-markdown-content&quot;&gt;Adding Code and Markdown Content&lt;a class=&quot;headerlink&quot; href=&quot;#adding-code-and-markdown-content&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It‚Äôs time for you to gain experience creating some content in marimo. By following the walk-through, you‚Äôll get hands-on practice with the basics.&lt;/p&gt;
&lt;p&gt;Although confusing the first time you see it, the single cell that contains &lt;code&gt;import marimo as mo&lt;/code&gt; is actually a blank cell. This code allows you to work with the &lt;a href=&quot;https://docs.marimo.io/api/&quot;&gt;marimo API&lt;/a&gt;. However, it‚Äôs not in the cell unless you type it in manually.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/marimo-notebook/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/marimo-notebook/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: Marimo: A Reactive, Reproducible Notebook</title>
      <id>https://realpython.com/quizzes/marimo-notebook/</id>
      <link href="https://realpython.com/quizzes/marimo-notebook/"/>
      <updated>2025-05-26T12:00:00+00:00</updated>
      <summary>This quiz is a great way to reinforce and build on what you&#x27;ve learned about marimo notebooks. You&#x27;ll find most of the answers in the tutorial, but you&#x27;ll need to do some additional research to find some of the answers.</summary>
      <content type="html">
        &lt;p&gt;Why not challenge yourself and see how much you know about marimo notebooks?&lt;/p&gt;
&lt;p&gt;Working your way through this quiz is a great way to reinforce and build on what you learned in the &lt;a href=&quot;https://realpython.com/marimo-notebook/&quot;&gt;Marimo: A Reactive, Reproducible Notebook&lt;/a&gt; tutorial. &lt;/p&gt;
&lt;p&gt;You could try answering the questions without reading the tutorial first, but you&amp;rsquo;d miss out on a great learning experience!&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #250: DjangoCon Europe 2025: Live Recording From Dublin</title>
      <id>https://realpython.com/podcasts/rpp/250/</id>
      <link href="https://realpython.com/podcasts/rpp/250/"/>
      <updated>2025-05-23T12:00:00+00:00</updated>
      <summary>What goes into making video courses at Real Python? How should you build an installable Django application? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;What goes into making video courses at Real Python? How should you build an installable Django application? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Nested Loops in Python</title>
      <id>https://realpython.com/nested-loops-python/</id>
      <link href="https://realpython.com/nested-loops-python/"/>
      <updated>2025-05-21T14:00:00+00:00</updated>
      <summary>Learn how to use nested loops in Python to iterate over multiple sequences and perform repeated actions efficiently in your programs.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Nested loops in Python allow you to place one loop inside another, enabling you to perform repeated actions over multiple sequences. Understanding nested loops helps you write more efficient code, manage complex data structures, and avoid common pitfalls such as poor readability and performance issues.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nested loops in Python involve &lt;strong&gt;placing one loop inside another&lt;/strong&gt;, enabling iteration over multiple sequences or repeated actions.&lt;/li&gt;
&lt;li&gt;Situations where nested loops are a good idea include &lt;strong&gt;handling multidimensional data&lt;/strong&gt;, &lt;strong&gt;generating patterns&lt;/strong&gt;, and &lt;strong&gt;performing repetitive tasks&lt;/strong&gt; with multiple layers of iteration.&lt;/li&gt;
&lt;li&gt;You can break out of nested loops by using the &lt;strong&gt;&lt;code&gt;break&lt;/code&gt; statement&lt;/strong&gt;, which exits the innermost loop when a condition is met.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disadvantages of nested loops&lt;/strong&gt; include potential performance bottlenecks, poor readability, and variable scoping issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This tutorial provides practical examples and optimization techniques for using nested loops effectively in your Python programs.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/nested-loops-python-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-nested-loops-python-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code&lt;/a&gt; that you‚Äôll use to learn about nested loops in Python.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúNested Loops in Python‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/nested-loops-python/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #b9abe6;&quot; alt=&quot;Nested Loops in Python&quot; src=&quot;https://files.realpython.com/media/Nested-Loops-in-Python_Watermarked.0c20c531becf.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Nested-Loops-in-Python_Watermarked.0c20c531becf.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Nested-Loops-in-Python_Watermarked.0c20c531becf.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Nested-Loops-in-Python_Watermarked.0c20c531becf.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Nested-Loops-in-Python_Watermarked.0c20c531becf.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/nested-loops-python/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;Nested Loops in Python&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;Nested loops allow you to perform repeated actions over multiple sequences, but is there more? Test your understanding of nested loops in Python!&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;getting-started-with-nested-loops-in-python&quot;&gt;Getting Started With Nested Loops in Python&lt;a class=&quot;headerlink&quot; href=&quot;#getting-started-with-nested-loops-in-python&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Loops are fundamental building blocks in programming, allowing you to iterate through actions efficiently. In Python, there are two primary types of loops: the &lt;code&gt;for&lt;/code&gt; loop and the &lt;code&gt;while&lt;/code&gt; loop. Both serve the same purpose ‚Äîexecuting a block of code multiple times‚Äîbut they differ in how they operate and in their use cases:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https://realpython.com/python-for-loop/&quot;&gt;&lt;code&gt;for&lt;/code&gt; loop&lt;/a&gt; iterates over a sequence, such as a &lt;a href=&quot;/ref/builtin-types/list/&quot; class=&quot;ref-link&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;/ref/builtin-types/range/&quot; class=&quot;ref-link&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;, and executes a block of code for each item. They‚Äôre useful when the number of iterations is known beforehand.&lt;/li&gt;
&lt;li&gt;A &lt;a href=&quot;https://realpython.com/python-while-loop/&quot;&gt;&lt;code&gt;while&lt;/code&gt; loop&lt;/a&gt; runs as long as a specified condition remains true, making it useful when the number of iterations isn‚Äôt known in advance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You create a nested loop by placing one loop inside another. This structure is especially helpful when working with multidimensional data, generating patterns, or handling tasks that involve several layers of repetition.&lt;/p&gt;
&lt;p&gt;In a nested loop, the first loop is called the &lt;strong&gt;outer loop&lt;/strong&gt;, and the loop inside is the &lt;strong&gt;inner loop&lt;/strong&gt;. So, for every iteration of the outer loop, the inner loop runs completely before the outer loop moves to the next iteration.&lt;/p&gt;
&lt;p&gt;Here‚Äôs the basic syntax of a nested loop:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;python_syntax&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python Syntax&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outer_variable&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outer_iterable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner_variable&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inner_iterable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;outer_iterable&lt;/code&gt; must be a &lt;a href=&quot;https://realpython.com/python-list/&quot;&gt;list&lt;/a&gt;, a &lt;a href=&quot;https://realpython.com/python-dicts/&quot;&gt;dictionary&lt;/a&gt;, or some other &lt;a href=&quot;https://realpython.com/python-sequences/&quot;&gt;sequence&lt;/a&gt; of items that you can iterate over. The same applies to the &lt;code&gt;inner_iterable&lt;/code&gt;. The &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; inside the inner loop contains the code that runs once for each &lt;code&gt;for&lt;/code&gt; loop step in the &lt;code&gt;inner_iterable&lt;/code&gt;. Since the inner loop is nested inside the outer loop, it runs in full for each iteration of the outer loop.&lt;/p&gt;
&lt;p&gt;A good analogy for a nested loop is the hour and minute hands of a clock. The hour hand moves slowly around the clock, completing one full revolution every twelve hours. Meanwhile, the minute hand moves at a much faster rate, completing a revolution every hour. While both hands rotate at different speeds, they work together, each completing their own cycle within the same clock.&lt;/p&gt;
&lt;p&gt;Here‚Äôs how the clock logic looks in Python code:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;02d&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;02d&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;00:00&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;00:01&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;00:02&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  ‚ãÆ&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;23:57&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;23:58&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;23:59&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, every time the minute hand completes a cycle, the hour hand moves to the next hour. &lt;code&gt;:02d&lt;/code&gt; is a &lt;a href=&quot;https://realpython.com/python-formatted-output/#format-specifiers-and-their-components&quot;&gt;format specifier&lt;/a&gt; that ensures the number is printed as a two-digit-wide integer value.&lt;/p&gt;
&lt;p&gt;Now that you‚Äôve been introduced to nested loops, it‚Äôs time to explore some practical examples. You‚Äôll become familiar with writing programs using nested loops in the following section.&lt;/p&gt;
&lt;h2 id=&quot;exploring-practical-examples-of-nested-loops&quot;&gt;Exploring Practical Examples of Nested Loops&lt;a class=&quot;headerlink&quot; href=&quot;#exploring-practical-examples-of-nested-loops&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As you just learned, nested loops have a number of use cases. Here, you‚Äôll have a look at a few examples. These examples are interesting and practical, allowing you to have fun as you explore their syntax and semantics.&lt;/p&gt;
&lt;h3 id=&quot;printing-patterns-with-nested-loops&quot;&gt;Printing Patterns With Nested Loops&lt;a class=&quot;headerlink&quot; href=&quot;#printing-patterns-with-nested-loops&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Being able to print any pattern of your choosing is a fascinating feat in programming. One way you can achieve this is by understanding how nested loops work. The code snippet below builds a sail pattern using a few simple symbols. While this may not seem particularly exciting, consider it a first step toward creating something spectacular‚Äîlike a spaceship:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;linenos&quot;&gt; 1&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 2&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sail_patterns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*#-x+o&quot;&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 3&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 4&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 5&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;spacing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 6&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;symbol&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sail_patterns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 7&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;symbol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spacing&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 8&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt; 9&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;11&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;*     #     -     x     +     o&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;**    ##    --    xx    ++    oo&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;***   ###   ---   xxx   +++   ooo&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;****  ####  ----  xxxx  ++++  oooo&lt;/span&gt;
&lt;span class=&quot;linenos&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;***** ##### ----- xxxxx +++++ ooooo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here‚Äôs what the code does line by line:&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/nested-loops-python/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/nested-loops-python/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: Nested Loops in Python</title>
      <id>https://realpython.com/quizzes/nested-loops-python/</id>
      <link href="https://realpython.com/quizzes/nested-loops-python/"/>
      <updated>2025-05-21T12:00:00+00:00</updated>
      <summary>Nested loops allow you to perform repeated actions over multiple sequences, but is there more? Test your understanding of nested loops in Python!</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of
&lt;a href=&quot;https://realpython.com/nested-loops-python/&quot;&gt;Nested Loops in Python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nested loops in Python involve placing one loop inside another, enabling iteration over multiple sequences or repeated actions. They&amp;rsquo;re particularly useful for handling multidimensional data, generating patterns, and performing repetitive tasks with multiple layers of iteration.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>First Steps With LangChain</title>
      <id>https://realpython.com/courses/first-steps-langchain/</id>
      <link href="https://realpython.com/courses/first-steps-langchain/"/>
      <updated>2025-05-20T14:00:00+00:00</updated>
      <summary>Large language models (LLMs) have taken the world by storm. In this step-by-step video course, you&#x27;ll learn to use the LangChain library to build LLM-assisted applications.</summary>
      <content type="html">
        &lt;p&gt;You&amp;rsquo;ve likely interacted with large language models (LLMs), like the ones behind OpenAI&amp;rsquo;s ChatGPT, and experienced their remarkable ability to answer questions, summarize documents, write code, and much more.&lt;/p&gt;
&lt;p&gt;While LLMs are remarkable by themselves, with a little programming knowledge, you can leverage libraries like &lt;a href=&quot;https://python.langchain.com/docs/get_started/introduction&quot;&gt;LangChain&lt;/a&gt; to create your own LLM-powered applications that can do just about anything.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this video course, you&amp;rsquo;ll learn how to&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;strong&gt;LangChain&lt;/strong&gt; to build LLM-powered applications&lt;/li&gt;
&lt;li&gt;Create reusable instructions with &lt;strong&gt;prompt templates&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create and extend&lt;/strong&gt; LangChain chains&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Debug&lt;/strong&gt; what happens when a chain executes&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>How to Group Data Using Polars .group_by()</title>
      <id>https://realpython.com/polars-groupby/</id>
      <link href="https://realpython.com/polars-groupby/"/>
      <updated>2025-05-19T14:00:00+00:00</updated>
      <summary>Start using Polars .group_by() to make sense of your data. This tutorial shows you how to group, aggregate, and reveal hidden insights with hands-on examples.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;One of the most common tasks you‚Äôll encounter when analyzing Polars data is the need to summarize it. You can use the Polars &lt;code&gt;.group_by()&lt;/code&gt; method to create groupings based on column values. A related summarization technique is aggregation, where you take a sequence of related values and condense them into a single value.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this tutorial, you‚Äôll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can summarize data using &lt;strong&gt;aggregation&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You can use &lt;code&gt;.filter()&lt;/code&gt; to view &lt;strong&gt;specific data&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;.group_by()&lt;/code&gt; allows you to summarize &lt;strong&gt;one or more&lt;/strong&gt; columns of your data.&lt;/li&gt;
&lt;li&gt;Your &lt;strong&gt;time series&lt;/strong&gt; data can be grouped using &lt;code&gt;.group_by_dynamic()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can match summarized data with the original data using &lt;strong&gt;window functions&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pivot tables&lt;/strong&gt; allow you to group and aggregate rows and columns of data.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this tutorial, you‚Äôll learn how to group data in several ways using the &lt;code&gt;.group_by()&lt;/code&gt; method in Polars and apply aggregation to each group.&lt;/p&gt;
&lt;p&gt;Before you begin, you should be familiar with the basics of working with Polars DataFrames or another DataFrame library like &lt;a href=&quot;https://realpython.com/learning-paths/pandas-data-science/&quot;&gt;pandas&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;alert alert-primary&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you‚Äôre familiar with Polars, you‚Äôll know that in addition to DataFrames, Polars also supports &lt;a href=&quot;https://realpython.com/polars-lazyframe/&quot;&gt;LazyFrames&lt;/a&gt;. While this is an efficient tool when working with large datasets, and you‚Äôre certainly encouraged to learn how to use them, DataFrames are sufficient for the examples in this tutorial.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;In addition, you may find it helpful to use &lt;a href=&quot;https://realpython.com/jupyter-notebook-introduction/&quot;&gt;Jupyter Notebook&lt;/a&gt; as you work through many of the examples in this tutorial. Alternatively, &lt;a href=&quot;https://realpython.com/using-jupyterlab/&quot;&gt;JupyterLab&lt;/a&gt; will enhance your notebook experience, but any Python environment you‚Äôre comfortable with will work just fine.&lt;/p&gt;
&lt;p&gt;To get started, you‚Äôll need some data. For the central part of this tutorial, you‚Äôll use the student performance dataset freely available from the &lt;a href=&quot;https://archive.ics.uci.edu/dataset/320/student+performance&quot;&gt;UC Irvine Machine Learning Repository&lt;/a&gt;. The data in its original form comes in two files: &lt;code&gt;student-mat.csv&lt;/code&gt; and &lt;code&gt;student-por.csv&lt;/code&gt;. These contain data on students taking math and Portuguese language courses. &lt;/p&gt;
&lt;p&gt;Both files have been altered to include student identification numbers and the subject indicators &lt;code&gt;M&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt;, formatted as &lt;code&gt;math.parquet&lt;/code&gt; and &lt;code&gt;portuguese.parquet&lt;/code&gt;. All data has also been merged into a single &lt;code&gt;course.parquet&lt;/code&gt; file. These three files are available in your download bundle, which you can access by clicking the link below:&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/polars-groupby-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-polars-groupby-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code&lt;/a&gt; that you‚Äôll use to learn about grouping data with Polars .group_by().&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The table below shows the fields used in this tutorial:&lt;/p&gt;
&lt;div class=&quot;table-responsive&quot;&gt;
&lt;table class=&quot;table table-hover&quot;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Field Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;absences&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of absences&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;age&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Student‚Äôs age&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;failures&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Number of failures&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;G1&lt;/code&gt;, &lt;code&gt;G2&lt;/code&gt;, &lt;code&gt;G3&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;First, second, and final grade&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;internet&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Student has home internet access&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reason&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Reason for taking course&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;school&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;School attended&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;sex&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Student‚Äôs gender (&lt;code&gt;M&lt;/code&gt;, &lt;code&gt;F&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;student_id&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Student‚Äôs enrollment number&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;subject&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Subject studied (&lt;code&gt;M&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;The dataset is quite extensive, containing over thirty fields. If you want to experiment, the &lt;code&gt;student.txt&lt;/code&gt; file defines every field. This file is also available as part of the tutorial downloads.&lt;/p&gt;
&lt;p&gt;To use Polars, you first need to install the Polars library into your Python environment. To install Polars from the command prompt, use the following command:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;console&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--yellow&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Shell&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;-m&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pip&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;install&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;polars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In a Jupyter Notebook, the command is &lt;code&gt;!python -m pip install polars&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With everything set up, it‚Äôs time to start using Polars to aggregate and group data.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Get Your Code:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/polars-groupby-code/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-polars-groupby-code&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Click here to download the free sample code&lt;/a&gt; that you‚Äôll use to learn about grouping data with Polars .group_by().&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;container border rounded text-wrap-pretty my-3&quot;&gt;

  &lt;p class=&quot;my-3&quot;&gt;&lt;mark class=&quot;marker-highlight&quot;&gt;&lt;strong&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt; Take the Quiz:&lt;/strong&gt;&lt;/mark&gt; Test your knowledge with our interactive ‚ÄúHow to Group Data Using Polars .group_by()‚Äù quiz. You‚Äôll receive a score upon completion to help you track your learning progress:&lt;/p&gt;

  &lt;hr&gt;

  &lt;div class=&quot;row my-3&quot;&gt;
    &lt;div class=&quot;col-xs-12 col-sm-4 col-md-3 align-self-center&quot;&gt;

      &lt;a href=&quot;/quizzes/polars-groupby/&quot; tabindex=&quot;-1&quot;&gt;
        &lt;div class=&quot;embed-responsive embed-responsive-16by9&quot;&gt;

            &lt;img class=&quot;card-img-top m-0 p-0 embed-responsive-item rounded&quot; style=&quot;object-fit: contain; background: #fe7e73;&quot; alt=&quot;How to Group Data Using Polars .group_by()&quot; src=&quot;https://files.realpython.com/media/Polars-group_by-and-Aggregations_Watermarked.760a0c543c71.jpg&quot; width=&quot;1920&quot; height=&quot;1080&quot; srcset=&quot;/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Polars-group_by-and-Aggregations_Watermarked.760a0c543c71.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Polars-group_by-and-Aggregations_Watermarked.760a0c543c71.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Polars-group_by-and-Aggregations_Watermarked.760a0c543c71.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Polars-group_by-and-Aggregations_Watermarked.760a0c543c71.jpg 1920w&quot; sizes=&quot;(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)&quot;&gt;


          &lt;div class=&quot;card-img-overlay d-flex align-items-center&quot;&gt;
            &lt;div class=&quot;mx-auto&quot;&gt;
              &lt;span class=&quot;text-light&quot; style=&quot;opacity: 0.90;&quot;&gt;&lt;span class=&quot;icon baseline scale2x&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@quiz&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/a&gt;

    &lt;/div&gt;
    &lt;div class=&quot;col&quot;&gt;
      &lt;div class=&quot;mt-3 d-md-none&quot;&gt;&lt;/div&gt; 
      &lt;p class=&quot;small text-muted mb-0&quot;&gt;&lt;strong&gt;Interactive Quiz&lt;/strong&gt;&lt;/p&gt;
      &lt;a href=&quot;/quizzes/polars-groupby/&quot; class=&quot;stretched-link&quot;&gt;&lt;span class=&quot;my-0 h4&quot;&gt;How to Group Data Using Polars .group_by()&lt;/span&gt;&lt;/a&gt; 
      &lt;p class=&quot;text-muted mb-0 small&quot;&gt;Put your Polars .group_by() and aggregation skills to the test. This quiz goes beyond the tutorial, so you&#x27;ll need to dig deeper to find all the answers.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;

&lt;h2 id=&quot;aggregating-data&quot;&gt;Aggregating Data&lt;a class=&quot;headerlink&quot; href=&quot;#aggregating-data&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Whenever you want to aggregate data without grouping it, you apply an aggregation function directly to the column or columns you want to analyze. More often than not, you‚Äôll also want to group your aggregated data. You‚Äôll learn how to do that later‚Äîfor now, you‚Äôll focus on aggregation.&lt;/p&gt;
&lt;h3 id=&quot;learning-the-basics&quot;&gt;Learning the Basics&lt;a class=&quot;headerlink&quot; href=&quot;#learning-the-basics&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Suppose you wanted to find the highest number of absences among students in the math class. You can do this as follows:&lt;/p&gt;
&lt;div class=&quot;codeblock mb-3 w-100&quot; aria-label=&quot;Code block&quot; data-syntax-language=&quot;pycon&quot; data-is-repl=&quot;true&quot;&gt;
  &lt;div class=&quot;codeblock__header d-flex justify-content-between codeblock--blue&quot;&gt;
    &lt;span class=&quot;mr-2 noselect&quot; aria-label=&quot;Language&quot;&gt;Python&lt;/span&gt;
    
    &lt;div class=&quot;noselect&quot;&gt;
      
        &lt;span class=&quot;codeblock__output-toggle&quot; title=&quot;Toggle prompts and output&quot; role=&quot;button&quot;&gt;&lt;span class=&quot;icon baseline js-codeblock-output-on codeblock__header--icon-lower&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#regular--rectangle-terminal&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;
      
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style=&quot;position: relative;&quot;&gt;
    &lt;div class=&quot;highlight highlight--with-header&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;polars&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;pl&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math_students&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_parquet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;math.parquet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;gp&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;math_students&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;absences&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;... &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;shape: (1, 1)&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;‚îÇ absences ‚îÇ&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;‚îÇ ---      ‚îÇ&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;‚îÇ i64      ‚îÇ&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;‚ïû‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï°&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;‚îÇ 75       ‚îÇ&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    
    &lt;button class=&quot;codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only&quot; title=&quot;Copy to clipboard&quot;&gt;&lt;span class=&quot;icon baseline&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@copy&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/button&gt;
    &lt;template class=&quot;codeblock__copied-template&quot;&gt;
      &lt;span class=&quot;small&quot;&gt;&lt;span class=&quot;icon baseline mr-1 text-success&quot; aria-hidden=&quot;true&quot;&gt;&lt;svg aria-hidden=&quot;true&quot;&gt;&lt;use href=&quot;/static/icons.437b3be14035.svg#@check&quot;&gt;&lt;/use&gt;&lt;/svg&gt;&lt;/span&gt;Copied!&lt;/span&gt;
    &lt;/template&gt;
    
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After installing the Polars library earlier, you &lt;code&gt;import&lt;/code&gt; it into your code with the conventional alias &lt;code&gt;pl&lt;/code&gt; to access its functionality. This allows you to use the &lt;code&gt;read_parquet()&lt;/code&gt; function to read the contents of &lt;code&gt;math.parquet&lt;/code&gt; into a Polars DataFrame.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/polars-groupby/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/polars-groupby/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: How to Group Data Using Polars .group_by()</title>
      <id>https://realpython.com/quizzes/polars-groupby/</id>
      <link href="https://realpython.com/quizzes/polars-groupby/"/>
      <updated>2025-05-19T12:00:00+00:00</updated>
      <summary>Put your Polars .group_by() and aggregation skills to the test. This quiz goes beyond the tutorial, so you&#x27;ll need to dig deeper to find all the answers.</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of the techniques covered in
&lt;a href=&quot;https://realpython.com/polars-groupby/&quot;&gt;How to Group Data Using Polars .group_by()&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By working through the questions, you&amp;rsquo;ll review your understanding of how to use the data aggregation and grouping techniques provided by Polars.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll need to do some research outside of the tutorial to answer all the questions, so let this challenge take you on a learning journey.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #249: Going Beyond requirements.txt With pylock.toml and PEP 751</title>
      <id>https://realpython.com/podcasts/rpp/249/</id>
      <link href="https://realpython.com/podcasts/rpp/249/"/>
      <updated>2025-05-16T12:00:00+00:00</updated>
      <summary>What is the best way to record the Python dependencies for the reproducibility of your projects? What advantages will lock files provide for those projects? This week on the show, we welcome back Python Core Developer Brett Cannon to discuss his journey to bring PEP 751 and the pylock.toml file format to the community.</summary>
      <content type="html">
        &lt;p&gt;What is the best way to record the Python dependencies for the reproducibility of your projects? What advantages will lock files provide for those projects? This week on the show, we welcome back Python Core Developer Brett Cannon to discuss his journey to bring PEP 751 and the pylock.toml file format to the community.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>How to Get the Most Out of PyCon US</title>
      <id>https://realpython.com/pycon-guide/</id>
      <link href="https://realpython.com/pycon-guide/"/>
      <updated>2025-05-14T14:00:00+00:00</updated>
      <summary>Have your best PyCon US yet! This guide covers what to expect, how to prepare, and offers tips for before, during, and after the conference.</summary>
      <content type="html">
        &lt;div&gt;&lt;p&gt;Congratulations! You‚Äôre going to PyCon US!&lt;/p&gt;
&lt;p&gt;Whether this is your first time or you‚Äôre a regular attendee, going to a conference full of people who love the same thing as you is always a fun experience. There‚Äôs so much more to PyCon than just a bunch of people talking about the Python language‚Äîit‚Äôs a vibrant community event filled with talks, workshops, hallway conversations, and social gatherings. But for first-time attendees, it can also feel a little intimidating. This guide will help you navigate all there is to see and do at PyCon.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://us.pycon.org/2025/&quot;&gt;PyCon US&lt;/a&gt; is the biggest conference centered around Python. Originally launched in 2003, this conference has grown exponentially and has even spawned several other &lt;a href=&quot;https://www.python.org/community/workshops/&quot;&gt;PyCons and workshops around the world&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Everyone who attends PyCon will have a different experience, and that‚Äôs what makes the conference truly unique. This guide is meant to help you, but you don‚Äôt need to follow it strictly.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this article, you‚Äôll know:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How PyCon consists of &lt;strong&gt;tutorials&lt;/strong&gt;, &lt;strong&gt;conference&lt;/strong&gt;, and &lt;strong&gt;sprints&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;What to do &lt;strong&gt;before&lt;/strong&gt; you go&lt;/li&gt;
&lt;li&gt;What to do &lt;strong&gt;during&lt;/strong&gt; PyCon&lt;/li&gt;
&lt;li&gt;What to do &lt;strong&gt;after&lt;/strong&gt; the event&lt;/li&gt;
&lt;li&gt;How to have a &lt;strong&gt;great&lt;/strong&gt; PyCon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This guide contains links that are specific to PyCon 2025, but it should be useful for future PyCons as well.&lt;/p&gt;
&lt;div class=&quot;alert alert-warning&quot; role=&quot;alert&quot;&gt;
&lt;p&gt;&lt;strong markdown=&quot;1&quot;&gt;Free Download:&lt;/strong&gt; &lt;a href=&quot;https://realpython.com/bonus/python-tricks-sample-pdf/&quot; class=&quot;alert-link&quot; data-toggle=&quot;modal&quot; data-target=&quot;#modal-python-tricks-sample-pdf&quot; data-focus=&quot;false&quot; markdown=&quot;1&quot;&gt;Get a sample chapter from Python Tricks: The Book&lt;/a&gt; that shows you Python‚Äôs best practices with simple examples you can apply instantly to write more beautiful + Pythonic code.&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-pycon-involves&quot;&gt;What PyCon Involves&lt;a class=&quot;headerlink&quot; href=&quot;#what-pycon-involves&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Before considering how to get the most out of PyCon, it‚Äôs first important to understand what PyCon involves.&lt;/p&gt;
&lt;p&gt;PyCon is divided into three stages:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Tutorials:&lt;/strong&gt; PyCon starts with two days of three-hour workshops, during which you learn in depth with instructors. These sessions are worth attending because the class sizes are small, and you‚Äôll have the chance to ask instructors questions directly. You should consider going to at least one of these if you can. They have an additional cost of $150 per tutorial.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conference:&lt;/strong&gt; Next, PyCon offers three days of talks. Each presentation runs for 30 to 45 minutes, and around five talks run concurrently, including a Spanish-language charlas track. But that‚Äôs not all: there are open spaces, sponsors, posters, lightning talks, dinners, and so much more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sprints:&lt;/strong&gt; During this stage, you can take what you‚Äôve learned and apply it! This is a four-day exercise where people group up to work on various open-source projects related to Python. If you‚Äôve got the time, going to one or more sprint days is a great way to practice what you‚Äôve learned, become associated with an open-source project, and network with other smart and talented people. If you‚Äôre still unconvinced, here‚Äôs &lt;a href=&quot;https://pycon.blogspot.com/2025/04/pyconus-sprints.html&quot;&gt;what to expect at this year‚Äôs PyCon US sprints&lt;/a&gt;. Learn more about sprints from an earlier year in this &lt;a href=&quot;https://pycon.blogspot.com/2016/03/why-not-join-sprints-this-year-at-pycon.html&quot;&gt;blog post&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since most PyCon attendees go to the conference part, that‚Äôll be the focus of this article. However, don‚Äôt let that deter you from attending the tutorials or sprints if you can!&lt;/p&gt;
&lt;p&gt;You may learn more technical skills by attending the tutorials rather than listening to the talks. The sprints are great for networking and applying the skills you already have, as well as learning new ones from the people you‚Äôll be working with.&lt;/p&gt;
&lt;h2 id=&quot;what-to-do-before-you-go&quot;&gt;What to Do Before You Go&lt;a class=&quot;headerlink&quot; href=&quot;#what-to-do-before-you-go&quot; title=&quot;Permanent link&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In general, the more prepared you are for something, the better your experience will be. The same applies to PyCon.&lt;/p&gt;
&lt;p&gt;It‚Äôs really helpful to plan and prepare ahead of time, which you‚Äôre already doing just by reading this article!&lt;/p&gt;
&lt;p&gt;Look through the &lt;a href=&quot;https://us.pycon.org/2025/schedule/talks/&quot;&gt;talks schedule&lt;/a&gt; and see which talks sound most interesting. This doesn‚Äôt mean you need to plan out all of the talks you‚Äôll see in every slot possible. But it helps to get an idea of which topics will be presented so that you can decide what you‚Äôre most interested in.&lt;/p&gt;
&lt;p&gt;Getting the &lt;a href=&quot;https://us.pycon.org/2025/attend/onsite-information/&quot;&gt;PyCon US mobile app&lt;/a&gt; will help you plan your schedule. This app lets you view the schedule for the talks and add reminders for those you want to attend. If you‚Äôre having a hard time picking which talks to attend, you can come prepared with a question or problem you need to solve. Doing this can help you focus on the topics that are important to you.&lt;/p&gt;
&lt;p&gt;If you can, come a day early to check in and attend the opening reception. The line to check in on the first day is always long, so you‚Äôll save time if you check in the day before. There‚Äôs also an opening reception that evening, where you can meet other attendees and speakers and check out the various sponsors and their booths.&lt;/p&gt;
&lt;p&gt;If you‚Äôre new to PyCon, the &lt;a href=&quot;https://us.pycon.org/2025/events/newcomer-orientation/&quot;&gt;Newcomer Orientation&lt;/a&gt; can help you learn about the conference and how you can participate.&lt;/p&gt;
&lt;/div&gt;&lt;h2&gt;&lt;a href=&quot;https://realpython.com/pycon-guide/?utm_source=realpython&amp;utm_medium=rss&quot;&gt;Read the full article at https://realpython.com/pycon-guide/ ¬ª&lt;/a&gt;&lt;/h2&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Working With Missing Data in Polars</title>
      <id>https://realpython.com/courses/missing-data-polars/</id>
      <link href="https://realpython.com/courses/missing-data-polars/"/>
      <updated>2025-05-13T14:00:00+00:00</updated>
      <summary>In this video course, you&#x27;ll learn how to deal with missing data in Polars to ensure it doesn&#x27;t interfere with your data analysis. You&#x27;ll discover how to check for missing values, update them, and remove them.</summary>
      <content type="html">
        &lt;p&gt;Efficiently handling missing data in Polars is essential for keeping your datasets clean during analysis. Polars provides powerful tools to identify, replace, and remove null values, ensuring seamless data processing.&lt;/p&gt;
&lt;p&gt;This video course covers practical techniques for managing missing data and highlights Polars&amp;rsquo; capabilities to enhance your data analysis workflow. By following along, you&amp;rsquo;ll gain hands-on experience with these techniques and learn how to ensure your datasets are accurate and reliable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this video course, you&amp;rsquo;ll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Polars&lt;/strong&gt; allows you to handle missing data using &lt;strong&gt;LazyFrames&lt;/strong&gt; and &lt;strong&gt;DataFrames&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;check for null values&lt;/strong&gt; in Polars using the &lt;code&gt;.null_count()&lt;/code&gt; method.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;NaN&lt;/strong&gt; represents non-numeric values while &lt;strong&gt;null&lt;/strong&gt; indicates missing data.&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;replace NaN&lt;/strong&gt; in Polars by converting them to nulls and using &lt;code&gt;.fill_null()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You can &lt;strong&gt;fix missing data&lt;/strong&gt; by identifying, replacing, or removing null values.&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: Getting Started With Python IDLE</title>
      <id>https://realpython.com/quizzes/python-idle/</id>
      <link href="https://realpython.com/quizzes/python-idle/"/>
      <updated>2025-05-13T12:00:00+00:00</updated>
      <summary>In this quiz, you&#x27;ll test your understanding of Python IDLE, the default integrated development environment (IDE) that comes bundled with every Python installation. You&#x27;ll revisit how to interact with Python directly in IDLE, edit and execute Python files.</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of
&lt;a href=&quot;https://realpython.com/python-idle/&quot;&gt;Python IDLE&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Python IDLE is an IDE included with Python installations, designed for basic editing, execution, and debugging of Python code. You can also customize IDLE to make it a useful tool for writing Python.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #248: Experiments With Gen AI, Knowledge Graphs, Workflows, and Python</title>
      <id>https://realpython.com/podcasts/rpp/248/</id>
      <link href="https://realpython.com/podcasts/rpp/248/"/>
      <updated>2025-05-09T12:00:00+00:00</updated>
      <summary>Are you looking for some projects where you can practice your Python skills? Would you like to experiment with building a generative AI app or an automated knowledge graph sentiment analysis tool? This week on the show, we speak with Raymond Camden about his journey into Python, his work in developer relations, and the Python projects featured on his blog.</summary>
      <content type="html">
        &lt;p&gt;Are you looking for some projects where you can practice your Python skills? Would you like to experiment with building a generative AI app or an automated knowledge graph sentiment analysis tool? This week on the show, we speak with Raymond Camden about his journey into Python, his work in developer relations, and the Python projects featured on his blog.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Using the Python subprocess Module</title>
      <id>https://realpython.com/courses/python-subprocess-module/</id>
      <link href="https://realpython.com/courses/python-subprocess-module/"/>
      <updated>2025-05-06T14:00:00+00:00</updated>
      <summary>In this video course, you&#x27;ll learn how to use Python‚Äôs subprocess module to run and control external programs from your scripts. You&#x27;ll start with launching basic processes and progress to interacting with them as they execute.</summary>
      <content type="html">
        &lt;p&gt;Python&amp;rsquo;s &lt;code&gt;subprocess&lt;/code&gt; module allows you to run shell commands and manage external processes directly from your Python code. By using &lt;code&gt;subprocess&lt;/code&gt;, you can execute shell commands like &lt;code&gt;ls&lt;/code&gt; or &lt;code&gt;dir&lt;/code&gt;, launch applications, and handle both input and output streams. This module provides tools for error handling and process communication, making it a flexible choice for integrating command-line operations into your Python projects.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this video course, you&amp;rsquo;ll understand that:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Python &lt;code&gt;subprocess&lt;/code&gt; module is used to &lt;strong&gt;run shell commands&lt;/strong&gt; and manage external processes.&lt;/li&gt;
&lt;li&gt;You run a shell command using &lt;code&gt;subprocess&lt;/code&gt; by &lt;strong&gt;calling &lt;code&gt;subprocess.run()&lt;/code&gt;&lt;/strong&gt; with the command as a list of arguments.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subprocess.call()&lt;/code&gt;, &lt;code&gt;subprocess.run()&lt;/code&gt;, and &lt;code&gt;subprocess.Popen()&lt;/code&gt; differ in &lt;strong&gt;how they execute commands&lt;/strong&gt; and handle process output and return codes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multiprocessing&lt;/code&gt; is for &lt;strong&gt;parallel execution&lt;/strong&gt; within Python, while &lt;code&gt;subprocess&lt;/code&gt; manages &lt;strong&gt;external processes&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;To execute multiple commands in sequence using &lt;code&gt;subprocess&lt;/code&gt;, you can chain them by &lt;strong&gt;using pipes or running them consecutively&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: Python Logging With the Loguru Library</title>
      <id>https://realpython.com/quizzes/python-loguru/</id>
      <link href="https://realpython.com/quizzes/python-loguru/"/>
      <updated>2025-05-06T12:00:00+00:00</updated>
      <summary>Think you know Python logging? Take this quick Loguru quiz to test your knowledge of formatting, sinks, rotation, and more!</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of &lt;a href=&quot;https://realpython.com/python-loguru/&quot;&gt;How to Use Loguru for Simpler Python Logging&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By working through this quiz, you&amp;rsquo;ll revisit key concepts like installing Loguru, basic logging, formatting, sinks, log rotation, and capturing exception information.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Quiz: Web Automation With Python and Selenium</title>
      <id>https://realpython.com/quizzes/python-selenium/</id>
      <link href="https://realpython.com/quizzes/python-selenium/"/>
      <updated>2025-04-30T12:00:00+00:00</updated>
      <summary>In this quiz, you&#x27;ll test your understanding of using Selenium with Python for web automation. You&#x27;ll revisit concepts like launching browsers, interacting with web elements, handling dynamic content, and implementing the Page Object Model (POM) design pattern.</summary>
      <content type="html">
        &lt;p&gt;In this quiz, you&amp;rsquo;ll test your understanding of
&lt;a href=&quot;https://realpython.com/modern-web-automation-with-python-and-selenium/&quot;&gt;Web Automation With Python and Selenium&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;By working through this quiz, you&amp;rsquo;ll revisit concepts like launching browsers, interacting with web elements, handling dynamic content, and implementing the Page Object Model (POM) design pattern.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>Thread Safety in Python: Locks and Other Techniques</title>
      <id>https://realpython.com/courses/thread-safety-locks-other-techniques/</id>
      <link href="https://realpython.com/courses/thread-safety-locks-other-techniques/"/>
      <updated>2025-04-29T14:00:00+00:00</updated>
      <summary>In this video course, you&#x27;ll learn about the issues that can occur when your code is run in a multithreaded environment. Then you&#x27;ll explore the various synchronization primitives available in Python&#x27;s threading module, such as locks, which help you make your code safe.</summary>
      <content type="html">
        &lt;p&gt;Threads share state in your programs, which means race conditions can be created when two or more threads fight to update a value. This course is about the various primitives you can use to ensure atomic access to your program&amp;rsquo;s shared state.&lt;/p&gt;
&lt;p&gt;By the end of this video course, you&amp;rsquo;ll be able to identify safety issues and prevent them by using the synchronization primitives in Python&amp;rsquo;s &lt;code&gt;threading&lt;/code&gt; module to make your code thread-safe.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In this video course, you&amp;rsquo;ll learn:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What &lt;strong&gt;thread safety&lt;/strong&gt; is&lt;/li&gt;
&lt;li&gt;What &lt;strong&gt;race conditions&lt;/strong&gt; are and how to avoid them&lt;/li&gt;
&lt;li&gt;How to identify &lt;strong&gt;thread safety issues&lt;/strong&gt; in your code&lt;/li&gt;
&lt;li&gt;What different &lt;strong&gt;synchronization primitives&lt;/strong&gt; exist in the &lt;code&gt;threading&lt;/code&gt; module&lt;/li&gt;
&lt;li&gt;How to use synchronization primitives to &lt;strong&gt;make your code thread-safe&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>MySQL Databases and Python</title>
      <id>https://realpython.com/courses/mysql-databases-python/</id>
      <link href="https://realpython.com/courses/mysql-databases-python/"/>
      <updated>2025-04-22T14:00:00+00:00</updated>
      <summary>In this video course, you&#x27;ll learn how to connect your Python application with a MySQL database. You&#x27;ll design a movie rating system and perform some common queries on it. You&#x27;ll also see best practices and tips to prevent SQL injection attacks.</summary>
      <content type="html">
        &lt;p&gt;&lt;a href=&quot;https://mysql.com/&quot;&gt;MySQL&lt;/a&gt; is one of the most popular &lt;a href=&quot;https://en.wikipedia.org/wiki/Database#Database_management_system&quot;&gt;database management systems (DBMSs)&lt;/a&gt; on the market today. It ranked second only to the &lt;a href=&quot;https://docs.oracle.com/cd/E11882_01/server.112/e40540/intro.htm&quot;&gt;Oracle DBMS&lt;/a&gt; in this year&amp;rsquo;s &lt;a href=&quot;https://db-engines.com/en/ranking&quot;&gt;DB-Engines Ranking&lt;/a&gt;. As most software applications need to interact with data in some form, programming languages like Python provide tools for storing and accessing these data sources.&lt;/p&gt;
&lt;p&gt;Using the techniques discussed in this video course, you&amp;rsquo;ll be able to efficiently integrate a MySQL database with a Python application. You&amp;rsquo;ll develop a small MySQL database for a movie rating system and learn how to query it directly from your Python code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;By the end of this video course, you&amp;rsquo;ll be able to:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Identify unique features of &lt;strong&gt;MySQL&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Connect your application&lt;/strong&gt; to a MySQL database&lt;/li&gt;
&lt;li&gt;Query the database to &lt;strong&gt;fetch required data&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Handle exceptions&lt;/strong&gt; that occur while accessing the database&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;best practices&lt;/strong&gt; while building database applications&lt;/li&gt;
&lt;/ul&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #247: Exploring DuckDB &amp; Comparing Python Expressions vs Statements</title>
      <id>https://realpython.com/podcasts/rpp/247/</id>
      <link href="https://realpython.com/podcasts/rpp/247/"/>
      <updated>2025-04-18T12:00:00+00:00</updated>
      <summary>Are you looking for a fast database that can handle large datasets in Python? What&#x27;s the difference between a Python expression and a statement? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;Are you looking for a fast database that can handle large datasets in Python? What&#x27;s the difference between a Python expression and a statement? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #246: Learning Intermediate Python With a Deep Dive Course</title>
      <id>https://realpython.com/podcasts/rpp/246/</id>
      <link href="https://realpython.com/podcasts/rpp/246/"/>
      <updated>2025-04-11T12:00:00+00:00</updated>
      <summary>Do you want to learn deeper concepts in Python? Would the accountability of scheduled group classes help you get past the basics? This week, five Real Python Intermediate Deep Dive workshop members discuss their experiences.</summary>
      <content type="html">
        &lt;p&gt;Do you want to learn deeper concepts in Python? Would the accountability of scheduled group classes help you get past the basics? This week, five Real Python Intermediate Deep Dive workshop members discuss their experiences.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  
    <entry>
      <title>The Real Python Podcast ‚Äì Episode #245: GUIs &amp; TUIs: Choosing a User Interface for Your Python Project</title>
      <id>https://realpython.com/podcasts/rpp/245/</id>
      <link href="https://realpython.com/podcasts/rpp/245/"/>
      <updated>2025-04-04T12:00:00+00:00</updated>
      <summary>What are the current Python graphical user interface libraries? Should you build everything in the terminal and create a text-based user interface instead? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.</summary>
      <content type="html">
        &lt;p&gt;What are the current Python graphical user interface libraries? Should you build everything in the terminal and create a text-based user interface instead? Christopher Trudeau is back on the show this week, bringing another batch of PyCoder&#x27;s Weekly articles and projects.&lt;/p&gt;
        &lt;hr /&gt;
        &lt;p&gt;&lt;em&gt;[ Improve Your Python With üêç Python Tricks üíå ‚Äì Get a short &amp;amp; sweet Python Trick delivered to your inbox every couple of days. &lt;a href=&quot;https://realpython.com/python-tricks/?utm_source=realpython&amp;amp;utm_medium=rss&amp;amp;utm_campaign=footer&quot;&gt;&amp;gt;&amp;gt; Click here to learn more and see examples&lt;/a&gt; ]&lt;/em&gt;&lt;/p&gt;
      </content>
    </entry>
  

</feed>
